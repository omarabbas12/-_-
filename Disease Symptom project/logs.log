2024-02-11 17:11:25,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:11:25,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:11:25,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:11:25,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:13:53,860:INFO:PyCaret ClassificationExperiment
2024-02-11 17:13:53,860:INFO:Logging name: clf-default-name
2024-02-11 17:13:53,860:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-11 17:13:53,860:INFO:version 3.2.0
2024-02-11 17:13:53,860:INFO:Initializing setup()
2024-02-11 17:13:53,860:INFO:self.USI: 8445
2024-02-11 17:13:53,860:INFO:self._variable_keys: {'n_jobs_param', '_available_plots', 'gpu_n_jobs_param', 'seed', 'gpu_param', 'USI', 'X_test', 'pipeline', '_ml_usecase', 'X_train', 'exp_name_log', 'fix_imbalance', 'target_param', 'is_multiclass', 'exp_id', 'fold_generator', 'fold_groups_param', 'memory', 'fold_shuffle_param', 'html_param', 'logging_param', 'log_plots_param', 'y', 'y_train', 'X', 'idx', 'y_test', 'data'}
2024-02-11 17:13:53,860:INFO:Checking environment
2024-02-11 17:13:53,860:INFO:python_version: 3.11.4
2024-02-11 17:13:53,860:INFO:python_build: ('main', 'Jul  5 2023 13:38:37')
2024-02-11 17:13:53,860:INFO:machine: AMD64
2024-02-11 17:13:53,860:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-11 17:13:53,860:INFO:Memory: svmem(total=17015914496, available=6112075776, percent=64.1, used=10903838720, free=6112075776)
2024-02-11 17:13:53,860:INFO:Physical Core: 6
2024-02-11 17:13:53,860:INFO:Logical Core: 12
2024-02-11 17:13:53,860:INFO:Checking libraries
2024-02-11 17:13:53,860:INFO:System:
2024-02-11 17:13:53,860:INFO:    python: 3.11.4 | packaged by Anaconda, Inc. | (main, Jul  5 2023, 13:38:37) [MSC v.1916 64 bit (AMD64)]
2024-02-11 17:13:53,860:INFO:executable: C:\Users\mahmo\anaconda3\python.exe
2024-02-11 17:13:53,860:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-11 17:13:53,860:INFO:PyCaret required dependencies:
2024-02-11 17:13:54,803:INFO:                 pip: 23.2.1
2024-02-11 17:13:54,803:INFO:          setuptools: 68.0.0
2024-02-11 17:13:54,803:INFO:             pycaret: 3.2.0
2024-02-11 17:13:54,803:INFO:             IPython: 8.12.0
2024-02-11 17:13:54,803:INFO:          ipywidgets: 8.0.4
2024-02-11 17:13:54,803:INFO:                tqdm: 4.65.0
2024-02-11 17:13:54,803:INFO:               numpy: 1.24.3
2024-02-11 17:13:54,803:INFO:              pandas: 1.5.3
2024-02-11 17:13:54,803:INFO:              jinja2: 3.1.2
2024-02-11 17:13:54,803:INFO:               scipy: 1.10.1
2024-02-11 17:13:54,803:INFO:              joblib: 1.2.0
2024-02-11 17:13:54,803:INFO:             sklearn: 1.2.2
2024-02-11 17:13:54,803:INFO:                pyod: 1.1.2
2024-02-11 17:13:54,803:INFO:            imblearn: 0.10.1
2024-02-11 17:13:54,803:INFO:   category_encoders: 2.6.3
2024-02-11 17:13:54,803:INFO:            lightgbm: 4.3.0
2024-02-11 17:13:54,803:INFO:               numba: 0.57.0
2024-02-11 17:13:54,803:INFO:            requests: 2.31.0
2024-02-11 17:13:54,803:INFO:          matplotlib: 3.7.1
2024-02-11 17:13:54,803:INFO:          scikitplot: 0.3.7
2024-02-11 17:13:54,803:INFO:         yellowbrick: 1.5
2024-02-11 17:13:54,803:INFO:              plotly: 5.9.0
2024-02-11 17:13:54,803:INFO:    plotly-resampler: Not installed
2024-02-11 17:13:54,803:INFO:             kaleido: 0.2.1
2024-02-11 17:13:54,803:INFO:           schemdraw: 0.15
2024-02-11 17:13:54,803:INFO:         statsmodels: 0.14.0
2024-02-11 17:13:54,803:INFO:              sktime: 0.21.1
2024-02-11 17:13:54,803:INFO:               tbats: 1.1.3
2024-02-11 17:13:54,803:INFO:            pmdarima: 2.0.4
2024-02-11 17:13:54,803:INFO:              psutil: 5.9.0
2024-02-11 17:13:54,803:INFO:          markupsafe: 2.1.1
2024-02-11 17:13:54,803:INFO:             pickle5: Not installed
2024-02-11 17:13:54,803:INFO:         cloudpickle: 2.2.1
2024-02-11 17:13:54,803:INFO:         deprecation: 2.1.0
2024-02-11 17:13:54,803:INFO:              xxhash: 3.4.1
2024-02-11 17:13:54,803:INFO:           wurlitzer: Not installed
2024-02-11 17:13:54,803:INFO:PyCaret optional dependencies:
2024-02-11 17:13:56,578:INFO:                shap: 0.44.1
2024-02-11 17:13:56,578:INFO:           interpret: 0.5.0
2024-02-11 17:13:56,578:INFO:                umap: 0.5.5
2024-02-11 17:13:56,578:INFO:     ydata_profiling: 4.6.0
2024-02-11 17:13:56,578:INFO:  explainerdashboard: 0.4.5
2024-02-11 17:13:56,578:INFO:             autoviz: Not installed
2024-02-11 17:13:56,578:INFO:           fairlearn: 0.7.0
2024-02-11 17:13:56,578:INFO:          deepchecks: Not installed
2024-02-11 17:13:56,578:INFO:             xgboost: Not installed
2024-02-11 17:13:56,578:INFO:            catboost: 1.2.2
2024-02-11 17:13:56,578:INFO:              kmodes: 0.12.2
2024-02-11 17:13:56,578:INFO:             mlxtend: 0.23.1
2024-02-11 17:13:56,578:INFO:       statsforecast: 1.5.0
2024-02-11 17:13:56,578:INFO:        tune_sklearn: Not installed
2024-02-11 17:13:56,578:INFO:                 ray: Not installed
2024-02-11 17:13:56,578:INFO:            hyperopt: 0.2.7
2024-02-11 17:13:56,578:INFO:              optuna: 3.5.0
2024-02-11 17:13:56,578:INFO:               skopt: 0.9.0
2024-02-11 17:13:56,578:INFO:              mlflow: 1.30.1
2024-02-11 17:13:56,578:INFO:              gradio: 3.50.2
2024-02-11 17:13:56,578:INFO:             fastapi: 0.109.1
2024-02-11 17:13:56,578:INFO:             uvicorn: 0.27.0.post1
2024-02-11 17:13:56,578:INFO:              m2cgen: 0.10.0
2024-02-11 17:13:56,578:INFO:           evidently: 0.2.8
2024-02-11 17:13:56,578:INFO:               fugue: 0.8.6
2024-02-11 17:13:56,578:INFO:           streamlit: Not installed
2024-02-11 17:13:56,578:INFO:             prophet: Not installed
2024-02-11 17:13:56,578:INFO:None
2024-02-11 17:13:56,578:INFO:Set up data.
2024-02-11 17:13:56,618:INFO:Set up folding strategy.
2024-02-11 17:13:56,618:INFO:Set up train/test split.
2024-02-11 17:13:56,639:INFO:Set up index.
2024-02-11 17:13:56,639:INFO:Assigning column types.
2024-02-11 17:13:56,649:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-11 17:13:56,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-11 17:13:56,731:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 17:13:56,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:56,792:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-11 17:13:57,013:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 17:13:57,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:57,043:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,043:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-11 17:13:57,083:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 17:13:57,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:57,113:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,153:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 17:13:57,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:57,183:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,183:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-11 17:13:57,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:57,253:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:57,333:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,343:INFO:Preparing preprocessing pipeline...
2024-02-11 17:13:57,343:INFO:Set up label encoding.
2024-02-11 17:13:57,343:INFO:Set up simple imputation.
2024-02-11 17:13:57,343:INFO:Set up column name cleaning.
2024-02-11 17:13:57,404:INFO:Finished creating preprocessing pipeline.
2024-02-11 17:13:57,413:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\mahmo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['itching', 'skin_rash',
                                             'nodal_skin_eruptions',
                                             'continuous_sneezing', 'shivering',
                                             'chills', 'joint_pain'...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-11 17:13:57,413:INFO:Creating final display dataframe.
2024-02-11 17:13:57,593:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 555  
1                                           prognosis  
2                                          Multiclass  
3   (vertigo) Paroymsal  Positional Vertigo: 0, AI...  
4                                         (4920, 133)  
5                                         (4920, 133)  
6                                         (3936, 133)  
7                                          (984, 133)  
8                                                 132  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               8445  
2024-02-11 17:13:57,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:57,697:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:13:57,809:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:13:57,809:INFO:setup() successfully completed in 3.95s...............
2024-02-11 17:14:13,864:INFO:gpu_param set to False
2024-02-11 17:14:13,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:14:13,940:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:14:14,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 17:14:14,006:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 17:14:23,534:INFO:Initializing compare_models()
2024-02-11 17:14:23,534:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-11 17:14:23,534:INFO:Checking exceptions
2024-02-11 17:14:23,543:INFO:Preparing display monitor
2024-02-11 17:14:23,573:INFO:Initializing Logistic Regression
2024-02-11 17:14:23,573:INFO:Total runtime is 0.0 minutes
2024-02-11 17:14:23,580:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:23,580:INFO:Initializing create_model()
2024-02-11 17:14:23,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:23,580:INFO:Checking exceptions
2024-02-11 17:14:23,580:INFO:Importing libraries
2024-02-11 17:14:23,580:INFO:Copying training dataset
2024-02-11 17:14:23,590:INFO:Defining folds
2024-02-11 17:14:23,590:INFO:Declaring metric variables
2024-02-11 17:14:23,596:INFO:Importing untrained model
2024-02-11 17:14:23,600:INFO:Logistic Regression Imported successfully
2024-02-11 17:14:23,607:INFO:Starting cross validation
2024-02-11 17:14:23,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:35,603:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,613:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,623:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,643:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,653:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,673:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,683:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,683:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,729:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,733:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,733:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,733:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,746:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,748:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,755:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,759:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,763:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,768:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,775:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,781:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,781:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,791:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,801:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:35,821:INFO:Calculating mean and std
2024-02-11 17:14:35,821:INFO:Creating metrics dataframe
2024-02-11 17:14:35,831:INFO:Uploading results into container
2024-02-11 17:14:35,831:INFO:Uploading model into container now
2024-02-11 17:14:35,831:INFO:_master_model_container: 1
2024-02-11 17:14:35,831:INFO:_display_container: 2
2024-02-11 17:14:35,841:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 17:14:35,841:INFO:create_model() successfully completed......................................
2024-02-11 17:14:36,355:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:36,355:INFO:Creating metrics dataframe
2024-02-11 17:14:36,365:INFO:Initializing K Neighbors Classifier
2024-02-11 17:14:36,365:INFO:Total runtime is 0.21320348580678303 minutes
2024-02-11 17:14:36,371:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:36,371:INFO:Initializing create_model()
2024-02-11 17:14:36,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:36,371:INFO:Checking exceptions
2024-02-11 17:14:36,372:INFO:Importing libraries
2024-02-11 17:14:36,372:INFO:Copying training dataset
2024-02-11 17:14:36,385:INFO:Defining folds
2024-02-11 17:14:36,385:INFO:Declaring metric variables
2024-02-11 17:14:36,388:INFO:Importing untrained model
2024-02-11 17:14:36,396:INFO:K Neighbors Classifier Imported successfully
2024-02-11 17:14:36,396:INFO:Starting cross validation
2024-02-11 17:14:36,406:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:37,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,139:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,139:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,139:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,139:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,149:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:37,149:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,132:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,137:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,137:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,147:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,157:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,157:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,167:INFO:Calculating mean and std
2024-02-11 17:14:41,167:INFO:Creating metrics dataframe
2024-02-11 17:14:41,167:INFO:Uploading results into container
2024-02-11 17:14:41,167:INFO:Uploading model into container now
2024-02-11 17:14:41,177:INFO:_master_model_container: 2
2024-02-11 17:14:41,177:INFO:_display_container: 2
2024-02-11 17:14:41,177:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-11 17:14:41,177:INFO:create_model() successfully completed......................................
2024-02-11 17:14:41,557:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:41,557:INFO:Creating metrics dataframe
2024-02-11 17:14:41,570:INFO:Initializing Naive Bayes
2024-02-11 17:14:41,570:INFO:Total runtime is 0.29994990428288776 minutes
2024-02-11 17:14:41,570:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:41,570:INFO:Initializing create_model()
2024-02-11 17:14:41,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:41,570:INFO:Checking exceptions
2024-02-11 17:14:41,570:INFO:Importing libraries
2024-02-11 17:14:41,570:INFO:Copying training dataset
2024-02-11 17:14:41,587:INFO:Defining folds
2024-02-11 17:14:41,587:INFO:Declaring metric variables
2024-02-11 17:14:41,590:INFO:Importing untrained model
2024-02-11 17:14:41,596:INFO:Naive Bayes Imported successfully
2024-02-11 17:14:41,600:INFO:Starting cross validation
2024-02-11 17:14:41,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:41,816:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,826:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,836:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,836:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,836:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,836:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,836:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,846:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,846:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,846:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,856:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,856:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,856:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,866:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,866:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,866:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,866:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,866:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,886:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,886:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,896:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,896:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,896:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,906:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,906:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,926:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:41,936:INFO:Calculating mean and std
2024-02-11 17:14:41,936:INFO:Creating metrics dataframe
2024-02-11 17:14:41,946:INFO:Uploading results into container
2024-02-11 17:14:41,946:INFO:Uploading model into container now
2024-02-11 17:14:41,946:INFO:_master_model_container: 3
2024-02-11 17:14:41,946:INFO:_display_container: 2
2024-02-11 17:14:41,946:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-11 17:14:41,946:INFO:create_model() successfully completed......................................
2024-02-11 17:14:42,337:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:42,337:INFO:Creating metrics dataframe
2024-02-11 17:14:42,351:INFO:Initializing Decision Tree Classifier
2024-02-11 17:14:42,351:INFO:Total runtime is 0.3129753629366557 minutes
2024-02-11 17:14:42,354:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:42,354:INFO:Initializing create_model()
2024-02-11 17:14:42,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:42,354:INFO:Checking exceptions
2024-02-11 17:14:42,354:INFO:Importing libraries
2024-02-11 17:14:42,354:INFO:Copying training dataset
2024-02-11 17:14:42,365:INFO:Defining folds
2024-02-11 17:14:42,365:INFO:Declaring metric variables
2024-02-11 17:14:42,368:INFO:Importing untrained model
2024-02-11 17:14:42,368:INFO:Decision Tree Classifier Imported successfully
2024-02-11 17:14:42,378:INFO:Starting cross validation
2024-02-11 17:14:42,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:42,607:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,627:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,627:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,627:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,627:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,637:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,639:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,639:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,639:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,639:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,639:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,639:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,639:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,654:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,655:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,659:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:42,673:INFO:Calculating mean and std
2024-02-11 17:14:42,675:INFO:Creating metrics dataframe
2024-02-11 17:14:42,678:INFO:Uploading results into container
2024-02-11 17:14:42,679:INFO:Uploading model into container now
2024-02-11 17:14:42,679:INFO:_master_model_container: 4
2024-02-11 17:14:42,679:INFO:_display_container: 2
2024-02-11 17:14:42,680:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=555, splitter='best')
2024-02-11 17:14:42,680:INFO:create_model() successfully completed......................................
2024-02-11 17:14:43,135:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:43,135:INFO:Creating metrics dataframe
2024-02-11 17:14:43,155:INFO:Initializing SVM - Linear Kernel
2024-02-11 17:14:43,155:INFO:Total runtime is 0.3263748606046041 minutes
2024-02-11 17:14:43,161:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:43,161:INFO:Initializing create_model()
2024-02-11 17:14:43,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:43,161:INFO:Checking exceptions
2024-02-11 17:14:43,161:INFO:Importing libraries
2024-02-11 17:14:43,163:INFO:Copying training dataset
2024-02-11 17:14:43,175:INFO:Defining folds
2024-02-11 17:14:43,175:INFO:Declaring metric variables
2024-02-11 17:14:43,179:INFO:Importing untrained model
2024-02-11 17:14:43,184:INFO:SVM - Linear Kernel Imported successfully
2024-02-11 17:14:43,184:INFO:Starting cross validation
2024-02-11 17:14:43,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:43,404:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,414:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,414:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,424:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,594:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,604:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,604:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,654:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,654:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,664:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,664:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,684:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,684:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,684:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,684:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,694:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,694:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,694:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,694:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,706:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,706:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,706:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,714:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,717:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,718:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,731:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,732:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 17:14:43,735:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,735:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,741:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,742:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,747:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,747:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:43,757:INFO:Calculating mean and std
2024-02-11 17:14:43,757:INFO:Creating metrics dataframe
2024-02-11 17:14:43,767:INFO:Uploading results into container
2024-02-11 17:14:43,767:INFO:Uploading model into container now
2024-02-11 17:14:43,767:INFO:_master_model_container: 5
2024-02-11 17:14:43,767:INFO:_display_container: 2
2024-02-11 17:14:43,767:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=555, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-11 17:14:43,767:INFO:create_model() successfully completed......................................
2024-02-11 17:14:44,181:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:44,181:INFO:Creating metrics dataframe
2024-02-11 17:14:44,191:INFO:Initializing Ridge Classifier
2024-02-11 17:14:44,191:INFO:Total runtime is 0.3436358133951823 minutes
2024-02-11 17:14:44,191:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:44,191:INFO:Initializing create_model()
2024-02-11 17:14:44,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:44,191:INFO:Checking exceptions
2024-02-11 17:14:44,191:INFO:Importing libraries
2024-02-11 17:14:44,191:INFO:Copying training dataset
2024-02-11 17:14:44,208:INFO:Defining folds
2024-02-11 17:14:44,208:INFO:Declaring metric variables
2024-02-11 17:14:44,215:INFO:Importing untrained model
2024-02-11 17:14:44,217:INFO:Ridge Classifier Imported successfully
2024-02-11 17:14:44,217:INFO:Starting cross validation
2024-02-11 17:14:44,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:44,410:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,410:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,410:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,410:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,410:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,410:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,410:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,420:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,430:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,430:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,430:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 17:14:44,430:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,435:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,441:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,441:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,441:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,441:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,441:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,441:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,441:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,451:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:44,461:INFO:Calculating mean and std
2024-02-11 17:14:44,461:INFO:Creating metrics dataframe
2024-02-11 17:14:44,471:INFO:Uploading results into container
2024-02-11 17:14:44,471:INFO:Uploading model into container now
2024-02-11 17:14:44,471:INFO:_master_model_container: 6
2024-02-11 17:14:44,471:INFO:_display_container: 2
2024-02-11 17:14:44,471:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=555, solver='auto',
                tol=0.0001)
2024-02-11 17:14:44,474:INFO:create_model() successfully completed......................................
2024-02-11 17:14:44,908:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:44,908:INFO:Creating metrics dataframe
2024-02-11 17:14:44,918:INFO:Initializing Random Forest Classifier
2024-02-11 17:14:44,918:INFO:Total runtime is 0.3557510534922282 minutes
2024-02-11 17:14:44,928:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:44,928:INFO:Initializing create_model()
2024-02-11 17:14:44,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:44,928:INFO:Checking exceptions
2024-02-11 17:14:44,928:INFO:Importing libraries
2024-02-11 17:14:44,928:INFO:Copying training dataset
2024-02-11 17:14:44,947:INFO:Defining folds
2024-02-11 17:14:44,948:INFO:Declaring metric variables
2024-02-11 17:14:44,951:INFO:Importing untrained model
2024-02-11 17:14:44,951:INFO:Random Forest Classifier Imported successfully
2024-02-11 17:14:44,966:INFO:Starting cross validation
2024-02-11 17:14:44,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:46,018:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,048:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,068:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,078:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,088:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,118:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,118:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,135:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,148:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,168:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,188:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,188:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,208:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,218:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,228:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,238:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,278:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,289:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,299:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,299:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,299:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,299:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,309:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,309:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,309:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,320:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,320:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,320:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:46,340:INFO:Calculating mean and std
2024-02-11 17:14:46,340:INFO:Creating metrics dataframe
2024-02-11 17:14:46,352:INFO:Uploading results into container
2024-02-11 17:14:46,352:INFO:Uploading model into container now
2024-02-11 17:14:46,352:INFO:_master_model_container: 7
2024-02-11 17:14:46,352:INFO:_display_container: 2
2024-02-11 17:14:46,352:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=555, verbose=0, warm_start=False)
2024-02-11 17:14:46,352:INFO:create_model() successfully completed......................................
2024-02-11 17:14:46,775:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:46,775:INFO:Creating metrics dataframe
2024-02-11 17:14:46,785:INFO:Initializing Quadratic Discriminant Analysis
2024-02-11 17:14:46,785:INFO:Total runtime is 0.3868649999300639 minutes
2024-02-11 17:14:46,785:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:46,785:INFO:Initializing create_model()
2024-02-11 17:14:46,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:46,785:INFO:Checking exceptions
2024-02-11 17:14:46,785:INFO:Importing libraries
2024-02-11 17:14:46,785:INFO:Copying training dataset
2024-02-11 17:14:46,800:INFO:Defining folds
2024-02-11 17:14:46,800:INFO:Declaring metric variables
2024-02-11 17:14:46,809:INFO:Importing untrained model
2024-02-11 17:14:46,816:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-11 17:14:46,819:INFO:Starting cross validation
2024-02-11 17:14:46,819:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:46,922:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,922:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,922:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,922:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,932:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,936:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,936:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,942:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,942:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:46,942:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 17:14:47,147:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,167:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,167:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,167:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:47,167:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,177:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,177:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,177:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,177:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,177:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,208:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,208:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,208:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,208:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,218:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,218:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:47,228:INFO:Calculating mean and std
2024-02-11 17:14:47,236:INFO:Creating metrics dataframe
2024-02-11 17:14:47,238:INFO:Uploading results into container
2024-02-11 17:14:47,238:INFO:Uploading model into container now
2024-02-11 17:14:47,238:INFO:_master_model_container: 8
2024-02-11 17:14:47,238:INFO:_display_container: 2
2024-02-11 17:14:47,238:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-11 17:14:47,238:INFO:create_model() successfully completed......................................
2024-02-11 17:14:47,615:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:47,615:INFO:Creating metrics dataframe
2024-02-11 17:14:47,625:INFO:Initializing Ada Boost Classifier
2024-02-11 17:14:47,625:INFO:Total runtime is 0.40088056723276777 minutes
2024-02-11 17:14:47,625:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:47,625:INFO:Initializing create_model()
2024-02-11 17:14:47,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:47,625:INFO:Checking exceptions
2024-02-11 17:14:47,625:INFO:Importing libraries
2024-02-11 17:14:47,625:INFO:Copying training dataset
2024-02-11 17:14:47,642:INFO:Defining folds
2024-02-11 17:14:47,642:INFO:Declaring metric variables
2024-02-11 17:14:47,649:INFO:Importing untrained model
2024-02-11 17:14:47,650:INFO:Ada Boost Classifier Imported successfully
2024-02-11 17:14:47,650:INFO:Starting cross validation
2024-02-11 17:14:47,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:14:49,074:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,084:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,094:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,094:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,135:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,144:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,154:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,154:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,184:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,194:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,204:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,204:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,204:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,204:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,214:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,214:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,214:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,254:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,254:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,285:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,285:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,295:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,295:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,315:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,325:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,325:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,325:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,325:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:14:49,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:14:49,355:INFO:Calculating mean and std
2024-02-11 17:14:49,355:INFO:Creating metrics dataframe
2024-02-11 17:14:49,369:INFO:Uploading results into container
2024-02-11 17:14:49,369:INFO:Uploading model into container now
2024-02-11 17:14:49,369:INFO:_master_model_container: 9
2024-02-11 17:14:49,369:INFO:_display_container: 2
2024-02-11 17:14:49,369:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=555)
2024-02-11 17:14:49,369:INFO:create_model() successfully completed......................................
2024-02-11 17:14:49,787:INFO:SubProcess create_model() end ==================================
2024-02-11 17:14:49,787:INFO:Creating metrics dataframe
2024-02-11 17:14:49,797:INFO:Initializing Gradient Boosting Classifier
2024-02-11 17:14:49,797:INFO:Total runtime is 0.43707696596781415 minutes
2024-02-11 17:14:49,807:INFO:SubProcess create_model() called ==================================
2024-02-11 17:14:49,807:INFO:Initializing create_model()
2024-02-11 17:14:49,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:14:49,807:INFO:Checking exceptions
2024-02-11 17:14:49,807:INFO:Importing libraries
2024-02-11 17:14:49,807:INFO:Copying training dataset
2024-02-11 17:14:49,818:INFO:Defining folds
2024-02-11 17:14:49,818:INFO:Declaring metric variables
2024-02-11 17:14:49,827:INFO:Importing untrained model
2024-02-11 17:14:49,830:INFO:Gradient Boosting Classifier Imported successfully
2024-02-11 17:14:49,836:INFO:Starting cross validation
2024-02-11 17:14:49,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:16:12,338:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,348:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,361:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,439:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,449:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,461:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,631:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,641:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,641:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,761:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,770:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:12,781:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,022:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,032:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,212:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,212:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,222:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,371:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,381:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,391:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,531:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,541:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,541:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,561:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,572:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,572:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,602:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,612:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,612:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:13,622:INFO:Calculating mean and std
2024-02-11 17:16:13,622:INFO:Creating metrics dataframe
2024-02-11 17:16:13,622:INFO:Uploading results into container
2024-02-11 17:16:13,622:INFO:Uploading model into container now
2024-02-11 17:16:13,622:INFO:_master_model_container: 10
2024-02-11 17:16:13,622:INFO:_display_container: 2
2024-02-11 17:16:13,622:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=555, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-11 17:16:13,622:INFO:create_model() successfully completed......................................
2024-02-11 17:16:14,081:INFO:SubProcess create_model() end ==================================
2024-02-11 17:16:14,081:INFO:Creating metrics dataframe
2024-02-11 17:16:14,109:INFO:Initializing Linear Discriminant Analysis
2024-02-11 17:16:14,109:INFO:Total runtime is 1.8422749320665996 minutes
2024-02-11 17:16:14,113:INFO:SubProcess create_model() called ==================================
2024-02-11 17:16:14,114:INFO:Initializing create_model()
2024-02-11 17:16:14,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:16:14,114:INFO:Checking exceptions
2024-02-11 17:16:14,114:INFO:Importing libraries
2024-02-11 17:16:14,114:INFO:Copying training dataset
2024-02-11 17:16:14,126:INFO:Defining folds
2024-02-11 17:16:14,126:INFO:Declaring metric variables
2024-02-11 17:16:14,131:INFO:Importing untrained model
2024-02-11 17:16:14,135:INFO:Linear Discriminant Analysis Imported successfully
2024-02-11 17:16:14,142:INFO:Starting cross validation
2024-02-11 17:16:14,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:16:14,524:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,524:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,562:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,564:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,564:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,564:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,575:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,575:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,575:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,575:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,575:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,585:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,585:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,585:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,585:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,595:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,595:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,595:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,595:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,605:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,605:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:14,625:INFO:Calculating mean and std
2024-02-11 17:16:14,625:INFO:Creating metrics dataframe
2024-02-11 17:16:14,625:INFO:Uploading results into container
2024-02-11 17:16:14,635:INFO:Uploading model into container now
2024-02-11 17:16:14,635:INFO:_master_model_container: 11
2024-02-11 17:16:14,635:INFO:_display_container: 2
2024-02-11 17:16:14,635:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-11 17:16:14,635:INFO:create_model() successfully completed......................................
2024-02-11 17:16:15,081:INFO:SubProcess create_model() end ==================================
2024-02-11 17:16:15,081:INFO:Creating metrics dataframe
2024-02-11 17:16:15,101:INFO:Initializing Extra Trees Classifier
2024-02-11 17:16:15,101:INFO:Total runtime is 1.8588125427563986 minutes
2024-02-11 17:16:15,101:INFO:SubProcess create_model() called ==================================
2024-02-11 17:16:15,101:INFO:Initializing create_model()
2024-02-11 17:16:15,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:16:15,101:INFO:Checking exceptions
2024-02-11 17:16:15,101:INFO:Importing libraries
2024-02-11 17:16:15,101:INFO:Copying training dataset
2024-02-11 17:16:15,124:INFO:Defining folds
2024-02-11 17:16:15,124:INFO:Declaring metric variables
2024-02-11 17:16:15,131:INFO:Importing untrained model
2024-02-11 17:16:15,131:INFO:Extra Trees Classifier Imported successfully
2024-02-11 17:16:15,147:INFO:Starting cross validation
2024-02-11 17:16:15,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:16:16,354:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,364:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,364:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,364:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,374:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,374:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,374:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,374:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,394:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,404:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,404:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,404:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,404:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,424:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,434:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,473:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,484:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,484:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,485:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,488:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,495:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,496:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,496:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,498:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,498:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,498:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,508:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,508:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,518:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:16,528:INFO:Calculating mean and std
2024-02-11 17:16:16,538:INFO:Creating metrics dataframe
2024-02-11 17:16:16,538:INFO:Uploading results into container
2024-02-11 17:16:16,538:INFO:Uploading model into container now
2024-02-11 17:16:16,538:INFO:_master_model_container: 12
2024-02-11 17:16:16,538:INFO:_display_container: 2
2024-02-11 17:16:16,548:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=555, verbose=0, warm_start=False)
2024-02-11 17:16:16,548:INFO:create_model() successfully completed......................................
2024-02-11 17:16:17,015:INFO:SubProcess create_model() end ==================================
2024-02-11 17:16:17,015:INFO:Creating metrics dataframe
2024-02-11 17:16:17,025:INFO:Initializing Light Gradient Boosting Machine
2024-02-11 17:16:17,025:INFO:Total runtime is 1.8908706903457642 minutes
2024-02-11 17:16:17,033:INFO:SubProcess create_model() called ==================================
2024-02-11 17:16:17,034:INFO:Initializing create_model()
2024-02-11 17:16:17,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:16:17,034:INFO:Checking exceptions
2024-02-11 17:16:17,034:INFO:Importing libraries
2024-02-11 17:16:17,034:INFO:Copying training dataset
2024-02-11 17:16:17,049:INFO:Defining folds
2024-02-11 17:16:17,049:INFO:Declaring metric variables
2024-02-11 17:16:17,051:INFO:Importing untrained model
2024-02-11 17:16:17,051:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-11 17:16:17,064:INFO:Starting cross validation
2024-02-11 17:16:17,065:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:16:48,975:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:48,985:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:48,995:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:49,095:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:49,105:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:49,115:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:49,818:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:49,828:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:49,912:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:49,992:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,012:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,282:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,292:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,312:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,772:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,782:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,822:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,872:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,926:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:50,932:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:51,192:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:51,202:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:51,212:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:51,242:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:51,252:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:51,262:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:52,440:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:52,450:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:52,460:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:16:52,470:INFO:Calculating mean and std
2024-02-11 17:16:52,470:INFO:Creating metrics dataframe
2024-02-11 17:16:52,470:INFO:Uploading results into container
2024-02-11 17:16:52,480:INFO:Uploading model into container now
2024-02-11 17:16:52,480:INFO:_master_model_container: 13
2024-02-11 17:16:52,480:INFO:_display_container: 2
2024-02-11 17:16:52,481:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=555, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-11 17:16:52,482:INFO:create_model() successfully completed......................................
2024-02-11 17:16:52,860:INFO:SubProcess create_model() end ==================================
2024-02-11 17:16:52,860:INFO:Creating metrics dataframe
2024-02-11 17:16:52,878:INFO:Initializing CatBoost Classifier
2024-02-11 17:16:52,878:INFO:Total runtime is 2.4884303490320843 minutes
2024-02-11 17:16:52,878:INFO:SubProcess create_model() called ==================================
2024-02-11 17:16:52,878:INFO:Initializing create_model()
2024-02-11 17:16:52,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:16:52,878:INFO:Checking exceptions
2024-02-11 17:16:52,878:INFO:Importing libraries
2024-02-11 17:16:52,878:INFO:Copying training dataset
2024-02-11 17:16:52,893:INFO:Defining folds
2024-02-11 17:16:52,894:INFO:Declaring metric variables
2024-02-11 17:16:52,897:INFO:Importing untrained model
2024-02-11 17:16:52,900:INFO:CatBoost Classifier Imported successfully
2024-02-11 17:16:52,903:INFO:Starting cross validation
2024-02-11 17:16:52,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:18:31,346:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:31,361:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:31,376:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:31,526:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:31,536:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:31,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:32,242:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:32,260:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:32,272:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:35,983:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:35,994:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:36,004:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:45,872:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:45,881:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:45,891:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:46,326:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:46,336:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:46,347:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:46,573:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:46,583:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:46,583:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:18:46,603:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\catboost\core.py", line 5100, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\catboost\core.py", line 2319, in _fit
    self._train(
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\catboost\core.py", line 1723, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4645, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4694, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-02-11 17:18:46,603:INFO:Calculating mean and std
2024-02-11 17:18:46,603:INFO:Creating metrics dataframe
2024-02-11 17:18:46,613:INFO:Uploading results into container
2024-02-11 17:18:46,613:INFO:Uploading model into container now
2024-02-11 17:18:46,613:INFO:_master_model_container: 14
2024-02-11 17:18:46,613:INFO:_display_container: 2
2024-02-11 17:18:46,613:INFO:<catboost.core.CatBoostClassifier object at 0x00000243B44FEC50>
2024-02-11 17:18:46,613:INFO:create_model() successfully completed......................................
2024-02-11 17:18:47,086:WARNING:create_model() for <catboost.core.CatBoostClassifier object at 0x00000243B44FEC50> raised an exception or returned all 0.0, trying without fit_kwargs:
2024-02-11 17:18:47,086:WARNING:Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2024-02-11 17:18:47,086:INFO:Initializing create_model()
2024-02-11 17:18:47,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:18:47,086:INFO:Checking exceptions
2024-02-11 17:18:47,086:INFO:Importing libraries
2024-02-11 17:18:47,086:INFO:Copying training dataset
2024-02-11 17:18:47,096:INFO:Defining folds
2024-02-11 17:18:47,096:INFO:Declaring metric variables
2024-02-11 17:18:47,103:INFO:Importing untrained model
2024-02-11 17:18:47,104:INFO:CatBoost Classifier Imported successfully
2024-02-11 17:18:47,104:INFO:Starting cross validation
2024-02-11 17:18:47,115:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:22:06,665:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:06,705:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:06,725:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:10,048:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:10,078:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:10,098:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:14,396:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:14,416:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:14,448:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:19,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:19,858:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:19,888:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:24,574:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:24,594:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:24,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:36,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:36,883:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:36,896:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:37,409:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:37,419:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:37,442:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:38,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:38,992:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:39,012:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:41,136:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:41,146:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:41,168:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:43,966:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:43,986:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:44,006:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:44,026:INFO:Calculating mean and std
2024-02-11 17:22:44,036:INFO:Creating metrics dataframe
2024-02-11 17:22:44,046:INFO:Uploading results into container
2024-02-11 17:22:44,046:INFO:Uploading model into container now
2024-02-11 17:22:44,046:INFO:_master_model_container: 15
2024-02-11 17:22:44,046:INFO:_display_container: 2
2024-02-11 17:22:44,046:INFO:<catboost.core.CatBoostClassifier object at 0x00000243B58B5BD0>
2024-02-11 17:22:44,046:INFO:create_model() successfully completed......................................
2024-02-11 17:22:44,720:INFO:SubProcess create_model() end ==================================
2024-02-11 17:22:44,720:INFO:Creating metrics dataframe
2024-02-11 17:22:44,751:INFO:Initializing Dummy Classifier
2024-02-11 17:22:44,753:INFO:Total runtime is 8.353002210458119 minutes
2024-02-11 17:22:44,761:INFO:SubProcess create_model() called ==================================
2024-02-11 17:22:44,762:INFO:Initializing create_model()
2024-02-11 17:22:44,762:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243B4515950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:22:44,762:INFO:Checking exceptions
2024-02-11 17:22:44,762:INFO:Importing libraries
2024-02-11 17:22:44,762:INFO:Copying training dataset
2024-02-11 17:22:44,782:INFO:Defining folds
2024-02-11 17:22:44,782:INFO:Declaring metric variables
2024-02-11 17:22:44,790:INFO:Importing untrained model
2024-02-11 17:22:44,793:INFO:Dummy Classifier Imported successfully
2024-02-11 17:22:44,814:INFO:Starting cross validation
2024-02-11 17:22:44,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 17:22:45,049:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,049:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,049:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,059:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,059:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,069:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,076:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,076:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,080:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,080:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,080:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,080:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,080:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,090:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,090:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,090:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,090:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,090:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,102:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,102:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,102:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,102:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,110:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,110:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,110:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,115:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,117:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,120:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,120:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,120:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,140:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,140:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 17:22:45,140:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,140:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 17:22:45,161:INFO:Calculating mean and std
2024-02-11 17:22:45,174:INFO:Creating metrics dataframe
2024-02-11 17:22:45,184:INFO:Uploading results into container
2024-02-11 17:22:45,184:INFO:Uploading model into container now
2024-02-11 17:22:45,184:INFO:_master_model_container: 16
2024-02-11 17:22:45,184:INFO:_display_container: 2
2024-02-11 17:22:45,189:INFO:DummyClassifier(constant=None, random_state=555, strategy='prior')
2024-02-11 17:22:45,189:INFO:create_model() successfully completed......................................
2024-02-11 17:22:45,806:INFO:SubProcess create_model() end ==================================
2024-02-11 17:22:45,806:INFO:Creating metrics dataframe
2024-02-11 17:22:45,854:INFO:Initializing create_model()
2024-02-11 17:22:45,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000243B0C59AD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 17:22:45,854:INFO:Checking exceptions
2024-02-11 17:22:45,854:INFO:Importing libraries
2024-02-11 17:22:45,854:INFO:Copying training dataset
2024-02-11 17:22:45,873:INFO:Defining folds
2024-02-11 17:22:45,873:INFO:Declaring metric variables
2024-02-11 17:22:45,873:INFO:Importing untrained model
2024-02-11 17:22:45,873:INFO:Declaring custom model
2024-02-11 17:22:45,873:INFO:Logistic Regression Imported successfully
2024-02-11 17:22:45,873:INFO:Cross validation set to False
2024-02-11 17:22:45,880:INFO:Fitting Model
2024-02-11 17:22:46,716:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 17:22:46,716:INFO:create_model() successfully completed......................................
2024-02-11 17:22:47,445:INFO:_master_model_container: 16
2024-02-11 17:22:47,445:INFO:_display_container: 2
2024-02-11 17:22:47,445:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 17:22:47,445:INFO:compare_models() successfully completed......................................
2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_9454e5f728e94a538bd11d96d096d354
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_44534a720350414c896021c2cfe2ce38_54af9384375c4042ac5234c15c709d8c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_4f3d7219380044ab9cf3ab6a8b2d45fe
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_fbdfd301b70a465396703a049530714d_21aea19abd2b4ca493af3ceaab8cbdc3
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_c263e58fbcfc4fc0aa60f7c1086e661c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_cf7b63f41bc145b9b886b96ba0d2d29c_87515baaa9054cffacb46d16c7711b35
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_9550e89f30134619b5a930743b0e6903
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_db4fe09174df48b69f191d0c923a64b5_a6d107c7b4cf4fce87fbb18e46b5a2e4
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_a726418e86aa470188fb041ec6e2788d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_75584d61d2a84ce082883bd27d109a3f_14514850ee9c44d8aa9f653c3544bc84
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_cc9dfaff29b544459750782af0a11469
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_b2df94fce6f14447a9b3b1e0e99fb2c1_cc96e197df2c439e8f061f768f4df733
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_cf6e4f50c6ed450fad4780d0c56b8f26
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_d9d3292ee8a94776a269b8fb8a95c22e_616f0c52c68545c6bb33cf75ff415d02
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_ce433b317aae481ab0d56ac15dcd4246
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_19fd0cf55a5e41e6af5ac425fce7f46e_87e4455a569047c597b0efa333d3d0b8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_8f9e42eaff3b40179d67fcdbb2444de5
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_49f1efdffbbe43b588914e6a206bdad0_6aee9b0fee0a4070aada799672f2939b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_64d4b3489db041ecb9fa25ced5681875
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_7f3582559e5a42949bf438710618a73c_320f37718b454ea3bde0b3e58a7c1f95
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_f94360c17f8a4d80927cc4bbc98f21d1
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_adf901462de443079276bb7dcc4ae128_2696465ee14b4d2e879405eb9c13724b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_8e71ba2eed794a2f91238d08d9e191b1
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_a2f3ded4400b45fb87c20c7591582c17_a31c0be7961143368e351ebf0ef89d56
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_6db3adf3cab841fa8ad246c716dd1ba2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_200588ee21ac43b1bf1e3bf246c0ff6c_da88cc86409b468597cf40c6a356ce5f
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_884eb7eaead74b3bac9b20d89a4dcedc
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_e7f43fa6b7314254b1d7015c940b49e5_a476625c41544c44ba0fa40352528525
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_fa73a57d88634cbd8e3cf7bbb37ab422
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_52cd2bb5e3ff4f36a679230f5a807d4e_b363fa85d054477c916b8205b440896f
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_fb989ab026a1410b9e1b5874a889167f
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:24,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_15244_31f360958e0a4bbb8d5fc6b35872ceb2_6e7eda7d54e24fc7b21363c8310bad01
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 17:41:36,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:41:36,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:41:36,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:41:36,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 17:44:15,301:WARNING:C:\Users\mahmo\AppData\Local\Temp\ipykernel_10708\1373237649.py:3: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  sns.heatmap(df.corr(), linewidths=0.5, annot=True)

2024-02-11 18:15:01,241:INFO:PyCaret ClassificationExperiment
2024-02-11 18:15:01,241:INFO:Logging name: clf-default-name
2024-02-11 18:15:01,241:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-11 18:15:01,241:INFO:version 3.2.0
2024-02-11 18:15:01,241:INFO:Initializing setup()
2024-02-11 18:15:01,241:INFO:self.USI: 0186
2024-02-11 18:15:01,241:INFO:self._variable_keys: {'memory', 'exp_name_log', 'seed', 'X_test', 'fold_generator', 'fold_shuffle_param', 'data', 'idx', 'USI', '_ml_usecase', 'y', 'is_multiclass', 'log_plots_param', 'pipeline', 'gpu_param', 'fold_groups_param', 'y_test', 'X', 'target_param', 'logging_param', 'n_jobs_param', 'html_param', 'y_train', 'X_train', 'fix_imbalance', 'gpu_n_jobs_param', '_available_plots', 'exp_id'}
2024-02-11 18:15:01,241:INFO:Checking environment
2024-02-11 18:15:01,241:INFO:python_version: 3.11.4
2024-02-11 18:15:01,241:INFO:python_build: ('main', 'Jul  5 2023 13:38:37')
2024-02-11 18:15:01,241:INFO:machine: AMD64
2024-02-11 18:15:01,242:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-11 18:15:01,242:INFO:Memory: svmem(total=17015914496, available=7095844864, percent=58.3, used=9920069632, free=7095844864)
2024-02-11 18:15:01,242:INFO:Physical Core: 6
2024-02-11 18:15:01,242:INFO:Logical Core: 12
2024-02-11 18:15:01,242:INFO:Checking libraries
2024-02-11 18:15:01,242:INFO:System:
2024-02-11 18:15:01,242:INFO:    python: 3.11.4 | packaged by Anaconda, Inc. | (main, Jul  5 2023, 13:38:37) [MSC v.1916 64 bit (AMD64)]
2024-02-11 18:15:01,242:INFO:executable: C:\Users\mahmo\anaconda3\python.exe
2024-02-11 18:15:01,243:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-11 18:15:01,243:INFO:PyCaret required dependencies:
2024-02-11 18:15:02,065:INFO:                 pip: 23.2.1
2024-02-11 18:15:02,065:INFO:          setuptools: 68.0.0
2024-02-11 18:15:02,065:INFO:             pycaret: 3.2.0
2024-02-11 18:15:02,065:INFO:             IPython: 8.12.0
2024-02-11 18:15:02,065:INFO:          ipywidgets: 8.0.4
2024-02-11 18:15:02,065:INFO:                tqdm: 4.65.0
2024-02-11 18:15:02,065:INFO:               numpy: 1.24.3
2024-02-11 18:15:02,065:INFO:              pandas: 1.5.3
2024-02-11 18:15:02,065:INFO:              jinja2: 3.1.2
2024-02-11 18:15:02,065:INFO:               scipy: 1.10.1
2024-02-11 18:15:02,065:INFO:              joblib: 1.2.0
2024-02-11 18:15:02,065:INFO:             sklearn: 1.2.2
2024-02-11 18:15:02,065:INFO:                pyod: 1.1.2
2024-02-11 18:15:02,065:INFO:            imblearn: 0.10.1
2024-02-11 18:15:02,065:INFO:   category_encoders: 2.6.3
2024-02-11 18:15:02,065:INFO:            lightgbm: 4.3.0
2024-02-11 18:15:02,065:INFO:               numba: 0.57.0
2024-02-11 18:15:02,065:INFO:            requests: 2.31.0
2024-02-11 18:15:02,065:INFO:          matplotlib: 3.7.1
2024-02-11 18:15:02,065:INFO:          scikitplot: 0.3.7
2024-02-11 18:15:02,065:INFO:         yellowbrick: 1.5
2024-02-11 18:15:02,065:INFO:              plotly: 5.9.0
2024-02-11 18:15:02,065:INFO:    plotly-resampler: Not installed
2024-02-11 18:15:02,065:INFO:             kaleido: 0.2.1
2024-02-11 18:15:02,065:INFO:           schemdraw: 0.15
2024-02-11 18:15:02,065:INFO:         statsmodels: 0.14.0
2024-02-11 18:15:02,065:INFO:              sktime: 0.21.1
2024-02-11 18:15:02,065:INFO:               tbats: 1.1.3
2024-02-11 18:15:02,065:INFO:            pmdarima: 2.0.4
2024-02-11 18:15:02,065:INFO:              psutil: 5.9.0
2024-02-11 18:15:02,065:INFO:          markupsafe: 2.1.1
2024-02-11 18:15:02,065:INFO:             pickle5: Not installed
2024-02-11 18:15:02,065:INFO:         cloudpickle: 2.2.1
2024-02-11 18:15:02,065:INFO:         deprecation: 2.1.0
2024-02-11 18:15:02,065:INFO:              xxhash: 3.4.1
2024-02-11 18:15:02,065:INFO:           wurlitzer: Not installed
2024-02-11 18:15:02,065:INFO:PyCaret optional dependencies:
2024-02-11 18:15:03,330:INFO:                shap: 0.44.1
2024-02-11 18:15:03,330:INFO:           interpret: 0.5.0
2024-02-11 18:15:03,330:INFO:                umap: 0.5.5
2024-02-11 18:15:03,330:INFO:     ydata_profiling: 4.6.0
2024-02-11 18:15:03,330:INFO:  explainerdashboard: 0.4.5
2024-02-11 18:15:03,330:INFO:             autoviz: Not installed
2024-02-11 18:15:03,330:INFO:           fairlearn: 0.7.0
2024-02-11 18:15:03,330:INFO:          deepchecks: Not installed
2024-02-11 18:15:03,330:INFO:             xgboost: Not installed
2024-02-11 18:15:03,330:INFO:            catboost: 1.2.2
2024-02-11 18:15:03,330:INFO:              kmodes: 0.12.2
2024-02-11 18:15:03,330:INFO:             mlxtend: 0.23.1
2024-02-11 18:15:03,330:INFO:       statsforecast: 1.5.0
2024-02-11 18:15:03,330:INFO:        tune_sklearn: Not installed
2024-02-11 18:15:03,330:INFO:                 ray: Not installed
2024-02-11 18:15:03,330:INFO:            hyperopt: 0.2.7
2024-02-11 18:15:03,330:INFO:              optuna: 3.5.0
2024-02-11 18:15:03,330:INFO:               skopt: 0.9.0
2024-02-11 18:15:03,330:INFO:              mlflow: 1.30.1
2024-02-11 18:15:03,330:INFO:              gradio: 3.50.2
2024-02-11 18:15:03,330:INFO:             fastapi: 0.109.1
2024-02-11 18:15:03,330:INFO:             uvicorn: 0.27.0.post1
2024-02-11 18:15:03,330:INFO:              m2cgen: 0.10.0
2024-02-11 18:15:03,330:INFO:           evidently: 0.2.8
2024-02-11 18:15:03,330:INFO:               fugue: 0.8.6
2024-02-11 18:15:03,330:INFO:           streamlit: Not installed
2024-02-11 18:15:03,330:INFO:             prophet: Not installed
2024-02-11 18:15:03,330:INFO:None
2024-02-11 18:15:03,330:INFO:Set up data.
2024-02-11 18:15:03,360:INFO:Set up folding strategy.
2024-02-11 18:15:03,360:INFO:Set up train/test split.
2024-02-11 18:15:03,380:INFO:Set up index.
2024-02-11 18:15:03,380:INFO:Assigning column types.
2024-02-11 18:15:03,388:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-11 18:15:03,430:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-11 18:15:03,430:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 18:15:03,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:03,460:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:03,531:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-11 18:15:03,531:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 18:15:03,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:03,560:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:03,560:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-11 18:15:03,611:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 18:15:03,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:03,641:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:03,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 18:15:03,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:03,751:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:03,751:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-11 18:15:03,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:03,870:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:03,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:03,970:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:03,970:INFO:Preparing preprocessing pipeline...
2024-02-11 18:15:03,970:INFO:Set up label encoding.
2024-02-11 18:15:03,970:INFO:Set up simple imputation.
2024-02-11 18:15:03,970:INFO:Set up column name cleaning.
2024-02-11 18:15:04,032:INFO:Finished creating preprocessing pipeline.
2024-02-11 18:15:04,042:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\mahmo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['itching', 'skin_rash',
                                             'nodal_skin_eruptions',
                                             'continuous_sneezing', 'shivering',
                                             'chills', 'joint_pain'...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-11 18:15:04,042:INFO:Creating final display dataframe.
2024-02-11 18:15:04,203:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 555  
1                                           prognosis  
2                                          Multiclass  
3   (vertigo) Paroymsal  Positional Vertigo: 0, AI...  
4                                         (4920, 133)  
5                                         (4920, 133)  
6                                         (3936, 133)  
7                                          (984, 133)  
8                                                 132  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               0186  
2024-02-11 18:15:04,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:04,287:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:04,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 18:15:04,357:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 18:15:04,357:INFO:setup() successfully completed in 3.12s...............
2024-02-11 18:15:41,201:INFO:Initializing compare_models()
2024-02-11 18:15:41,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-11 18:15:41,201:INFO:Checking exceptions
2024-02-11 18:15:41,209:INFO:Preparing display monitor
2024-02-11 18:15:41,237:INFO:Initializing Logistic Regression
2024-02-11 18:15:41,237:INFO:Total runtime is 0.0 minutes
2024-02-11 18:15:41,237:INFO:SubProcess create_model() called ==================================
2024-02-11 18:15:41,237:INFO:Initializing create_model()
2024-02-11 18:15:41,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:15:41,237:INFO:Checking exceptions
2024-02-11 18:15:41,237:INFO:Importing libraries
2024-02-11 18:15:41,237:INFO:Copying training dataset
2024-02-11 18:15:41,254:INFO:Defining folds
2024-02-11 18:15:41,254:INFO:Declaring metric variables
2024-02-11 18:15:41,254:INFO:Importing untrained model
2024-02-11 18:15:41,263:INFO:Logistic Regression Imported successfully
2024-02-11 18:15:41,263:INFO:Starting cross validation
2024-02-11 18:15:41,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:15:51,670:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,680:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,687:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,781:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,799:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,816:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,870:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,873:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,893:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,932:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,939:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,949:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,955:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,955:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,965:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,965:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,972:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,972:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:51,999:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,009:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,020:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,022:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,039:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,050:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,061:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,071:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,081:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,101:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,101:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,111:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:52,122:INFO:Calculating mean and std
2024-02-11 18:15:52,122:INFO:Creating metrics dataframe
2024-02-11 18:15:52,132:INFO:Uploading results into container
2024-02-11 18:15:52,132:INFO:Uploading model into container now
2024-02-11 18:15:52,132:INFO:_master_model_container: 1
2024-02-11 18:15:52,132:INFO:_display_container: 2
2024-02-11 18:15:52,132:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 18:15:52,132:INFO:create_model() successfully completed......................................
2024-02-11 18:15:52,502:INFO:SubProcess create_model() end ==================================
2024-02-11 18:15:52,502:INFO:Creating metrics dataframe
2024-02-11 18:15:52,512:INFO:Initializing K Neighbors Classifier
2024-02-11 18:15:52,512:INFO:Total runtime is 0.18791064421335857 minutes
2024-02-11 18:15:52,521:INFO:SubProcess create_model() called ==================================
2024-02-11 18:15:52,521:INFO:Initializing create_model()
2024-02-11 18:15:52,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:15:52,521:INFO:Checking exceptions
2024-02-11 18:15:52,521:INFO:Importing libraries
2024-02-11 18:15:52,522:INFO:Copying training dataset
2024-02-11 18:15:52,535:INFO:Defining folds
2024-02-11 18:15:52,535:INFO:Declaring metric variables
2024-02-11 18:15:52,540:INFO:Importing untrained model
2024-02-11 18:15:52,542:INFO:K Neighbors Classifier Imported successfully
2024-02-11 18:15:52,542:INFO:Starting cross validation
2024-02-11 18:15:52,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:15:53,348:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,358:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,358:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,358:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,358:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,368:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,368:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,368:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,368:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,368:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,378:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,378:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,388:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,388:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,398:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,398:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,422:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,428:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,438:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,459:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,459:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,469:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:53,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,132:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,132:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,132:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,142:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,142:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,142:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,152:INFO:Calculating mean and std
2024-02-11 18:15:58,152:INFO:Creating metrics dataframe
2024-02-11 18:15:58,162:INFO:Uploading results into container
2024-02-11 18:15:58,162:INFO:Uploading model into container now
2024-02-11 18:15:58,165:INFO:_master_model_container: 2
2024-02-11 18:15:58,165:INFO:_display_container: 2
2024-02-11 18:15:58,165:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-11 18:15:58,165:INFO:create_model() successfully completed......................................
2024-02-11 18:15:58,545:INFO:SubProcess create_model() end ==================================
2024-02-11 18:15:58,545:INFO:Creating metrics dataframe
2024-02-11 18:15:58,558:INFO:Initializing Naive Bayes
2024-02-11 18:15:58,559:INFO:Total runtime is 0.2887073556582133 minutes
2024-02-11 18:15:58,563:INFO:SubProcess create_model() called ==================================
2024-02-11 18:15:58,564:INFO:Initializing create_model()
2024-02-11 18:15:58,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:15:58,564:INFO:Checking exceptions
2024-02-11 18:15:58,564:INFO:Importing libraries
2024-02-11 18:15:58,564:INFO:Copying training dataset
2024-02-11 18:15:58,576:INFO:Defining folds
2024-02-11 18:15:58,576:INFO:Declaring metric variables
2024-02-11 18:15:58,579:INFO:Importing untrained model
2024-02-11 18:15:58,583:INFO:Naive Bayes Imported successfully
2024-02-11 18:15:58,593:INFO:Starting cross validation
2024-02-11 18:15:58,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:15:58,826:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,835:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,835:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,875:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,875:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,885:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,885:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,885:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,895:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,895:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,905:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,905:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,916:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,916:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:58,928:INFO:Calculating mean and std
2024-02-11 18:15:58,937:INFO:Creating metrics dataframe
2024-02-11 18:15:58,937:INFO:Uploading results into container
2024-02-11 18:15:58,937:INFO:Uploading model into container now
2024-02-11 18:15:58,937:INFO:_master_model_container: 3
2024-02-11 18:15:58,937:INFO:_display_container: 2
2024-02-11 18:15:58,937:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-11 18:15:58,937:INFO:create_model() successfully completed......................................
2024-02-11 18:15:59,326:INFO:SubProcess create_model() end ==================================
2024-02-11 18:15:59,326:INFO:Creating metrics dataframe
2024-02-11 18:15:59,339:INFO:Initializing Decision Tree Classifier
2024-02-11 18:15:59,339:INFO:Total runtime is 0.30169363816579187 minutes
2024-02-11 18:15:59,339:INFO:SubProcess create_model() called ==================================
2024-02-11 18:15:59,339:INFO:Initializing create_model()
2024-02-11 18:15:59,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:15:59,339:INFO:Checking exceptions
2024-02-11 18:15:59,339:INFO:Importing libraries
2024-02-11 18:15:59,339:INFO:Copying training dataset
2024-02-11 18:15:59,362:INFO:Defining folds
2024-02-11 18:15:59,363:INFO:Declaring metric variables
2024-02-11 18:15:59,368:INFO:Importing untrained model
2024-02-11 18:15:59,378:INFO:Decision Tree Classifier Imported successfully
2024-02-11 18:15:59,389:INFO:Starting cross validation
2024-02-11 18:15:59,392:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:15:59,616:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,618:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,619:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,621:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,621:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,621:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,627:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,631:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,631:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,631:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,641:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,641:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,641:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,651:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,651:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,651:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,651:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,651:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,651:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,651:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,661:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,661:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,661:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,661:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,661:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,661:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,671:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,671:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,671:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:15:59,681:INFO:Calculating mean and std
2024-02-11 18:15:59,681:INFO:Creating metrics dataframe
2024-02-11 18:15:59,691:INFO:Uploading results into container
2024-02-11 18:15:59,691:INFO:Uploading model into container now
2024-02-11 18:15:59,691:INFO:_master_model_container: 4
2024-02-11 18:15:59,691:INFO:_display_container: 2
2024-02-11 18:15:59,691:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=555, splitter='best')
2024-02-11 18:15:59,691:INFO:create_model() successfully completed......................................
2024-02-11 18:15:59,988:INFO:SubProcess create_model() end ==================================
2024-02-11 18:15:59,988:INFO:Creating metrics dataframe
2024-02-11 18:16:00,006:INFO:Initializing SVM - Linear Kernel
2024-02-11 18:16:00,006:INFO:Total runtime is 0.31282279491424564 minutes
2024-02-11 18:16:00,009:INFO:SubProcess create_model() called ==================================
2024-02-11 18:16:00,010:INFO:Initializing create_model()
2024-02-11 18:16:00,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:16:00,010:INFO:Checking exceptions
2024-02-11 18:16:00,010:INFO:Importing libraries
2024-02-11 18:16:00,010:INFO:Copying training dataset
2024-02-11 18:16:00,023:INFO:Defining folds
2024-02-11 18:16:00,023:INFO:Declaring metric variables
2024-02-11 18:16:00,026:INFO:Importing untrained model
2024-02-11 18:16:00,028:INFO:SVM - Linear Kernel Imported successfully
2024-02-11 18:16:00,037:INFO:Starting cross validation
2024-02-11 18:16:00,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:16:00,415:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,415:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,445:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,455:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,455:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,455:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,455:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,455:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,465:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,465:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,475:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,485:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,485:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,485:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,485:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,495:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,495:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,495:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,495:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,505:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,515:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,515:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,515:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,527:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,556:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,566:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 18:16:00,576:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,576:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,586:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:00,596:INFO:Calculating mean and std
2024-02-11 18:16:00,596:INFO:Creating metrics dataframe
2024-02-11 18:16:00,596:INFO:Uploading results into container
2024-02-11 18:16:00,596:INFO:Uploading model into container now
2024-02-11 18:16:00,596:INFO:_master_model_container: 5
2024-02-11 18:16:00,596:INFO:_display_container: 2
2024-02-11 18:16:00,596:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=555, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-11 18:16:00,596:INFO:create_model() successfully completed......................................
2024-02-11 18:16:00,914:INFO:SubProcess create_model() end ==================================
2024-02-11 18:16:00,914:INFO:Creating metrics dataframe
2024-02-11 18:16:00,938:INFO:Initializing Ridge Classifier
2024-02-11 18:16:00,938:INFO:Total runtime is 0.328346319993337 minutes
2024-02-11 18:16:00,942:INFO:SubProcess create_model() called ==================================
2024-02-11 18:16:00,942:INFO:Initializing create_model()
2024-02-11 18:16:00,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:16:00,943:INFO:Checking exceptions
2024-02-11 18:16:00,943:INFO:Importing libraries
2024-02-11 18:16:00,943:INFO:Copying training dataset
2024-02-11 18:16:00,955:INFO:Defining folds
2024-02-11 18:16:00,955:INFO:Declaring metric variables
2024-02-11 18:16:00,960:INFO:Importing untrained model
2024-02-11 18:16:00,964:INFO:Ridge Classifier Imported successfully
2024-02-11 18:16:00,977:INFO:Starting cross validation
2024-02-11 18:16:00,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:16:01,165:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,165:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,175:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,175:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,175:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 18:16:01,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,215:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,215:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,215:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,215:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,215:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,225:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,225:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,228:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:01,255:INFO:Calculating mean and std
2024-02-11 18:16:01,255:INFO:Creating metrics dataframe
2024-02-11 18:16:01,265:INFO:Uploading results into container
2024-02-11 18:16:01,265:INFO:Uploading model into container now
2024-02-11 18:16:01,265:INFO:_master_model_container: 6
2024-02-11 18:16:01,265:INFO:_display_container: 2
2024-02-11 18:16:01,265:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=555, solver='auto',
                tol=0.0001)
2024-02-11 18:16:01,265:INFO:create_model() successfully completed......................................
2024-02-11 18:16:01,595:INFO:SubProcess create_model() end ==================================
2024-02-11 18:16:01,595:INFO:Creating metrics dataframe
2024-02-11 18:16:01,605:INFO:Initializing Random Forest Classifier
2024-02-11 18:16:01,615:INFO:Total runtime is 0.33962974548339847 minutes
2024-02-11 18:16:01,618:INFO:SubProcess create_model() called ==================================
2024-02-11 18:16:01,618:INFO:Initializing create_model()
2024-02-11 18:16:01,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:16:01,618:INFO:Checking exceptions
2024-02-11 18:16:01,618:INFO:Importing libraries
2024-02-11 18:16:01,618:INFO:Copying training dataset
2024-02-11 18:16:01,628:INFO:Defining folds
2024-02-11 18:16:01,628:INFO:Declaring metric variables
2024-02-11 18:16:01,633:INFO:Importing untrained model
2024-02-11 18:16:01,633:INFO:Random Forest Classifier Imported successfully
2024-02-11 18:16:01,637:INFO:Starting cross validation
2024-02-11 18:16:01,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:16:02,593:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,603:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,613:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,629:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,646:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,653:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,683:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,683:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,683:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,714:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,714:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,729:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,731:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,732:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,742:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,742:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,752:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,755:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,847:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,847:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,854:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,854:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,854:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,854:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:02,864:INFO:Calculating mean and std
2024-02-11 18:16:02,864:INFO:Creating metrics dataframe
2024-02-11 18:16:02,874:INFO:Uploading results into container
2024-02-11 18:16:02,874:INFO:Uploading model into container now
2024-02-11 18:16:02,874:INFO:_master_model_container: 7
2024-02-11 18:16:02,874:INFO:_display_container: 2
2024-02-11 18:16:02,874:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=555, verbose=0, warm_start=False)
2024-02-11 18:16:02,874:INFO:create_model() successfully completed......................................
2024-02-11 18:16:03,164:INFO:SubProcess create_model() end ==================================
2024-02-11 18:16:03,164:INFO:Creating metrics dataframe
2024-02-11 18:16:03,178:INFO:Initializing Quadratic Discriminant Analysis
2024-02-11 18:16:03,178:INFO:Total runtime is 0.3656883955001831 minutes
2024-02-11 18:16:03,178:INFO:SubProcess create_model() called ==================================
2024-02-11 18:16:03,178:INFO:Initializing create_model()
2024-02-11 18:16:03,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:16:03,178:INFO:Checking exceptions
2024-02-11 18:16:03,178:INFO:Importing libraries
2024-02-11 18:16:03,178:INFO:Copying training dataset
2024-02-11 18:16:03,192:INFO:Defining folds
2024-02-11 18:16:03,192:INFO:Declaring metric variables
2024-02-11 18:16:03,192:INFO:Importing untrained model
2024-02-11 18:16:03,202:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-11 18:16:03,207:INFO:Starting cross validation
2024-02-11 18:16:03,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:16:03,281:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,281:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,301:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,301:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,301:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,301:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,301:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,301:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,312:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,322:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 18:16:03,515:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,529:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,529:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,529:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,535:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,535:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,535:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,555:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,559:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,560:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,562:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,562:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,564:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,567:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,567:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:03,568:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,569:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,571:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,573:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,573:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,573:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,576:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,576:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,580:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,583:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:03,600:INFO:Calculating mean and std
2024-02-11 18:16:03,602:INFO:Creating metrics dataframe
2024-02-11 18:16:03,606:INFO:Uploading results into container
2024-02-11 18:16:03,607:INFO:Uploading model into container now
2024-02-11 18:16:03,607:INFO:_master_model_container: 8
2024-02-11 18:16:03,607:INFO:_display_container: 2
2024-02-11 18:16:03,607:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-11 18:16:03,607:INFO:create_model() successfully completed......................................
2024-02-11 18:16:03,901:INFO:SubProcess create_model() end ==================================
2024-02-11 18:16:03,901:INFO:Creating metrics dataframe
2024-02-11 18:16:03,911:INFO:Initializing Ada Boost Classifier
2024-02-11 18:16:03,911:INFO:Total runtime is 0.3779022971789042 minutes
2024-02-11 18:16:03,911:INFO:SubProcess create_model() called ==================================
2024-02-11 18:16:03,911:INFO:Initializing create_model()
2024-02-11 18:16:03,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:16:03,911:INFO:Checking exceptions
2024-02-11 18:16:03,911:INFO:Importing libraries
2024-02-11 18:16:03,911:INFO:Copying training dataset
2024-02-11 18:16:03,929:INFO:Defining folds
2024-02-11 18:16:03,929:INFO:Declaring metric variables
2024-02-11 18:16:03,929:INFO:Importing untrained model
2024-02-11 18:16:03,939:INFO:Ada Boost Classifier Imported successfully
2024-02-11 18:16:03,941:INFO:Starting cross validation
2024-02-11 18:16:03,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:16:05,463:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,473:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,473:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,483:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,493:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,503:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,513:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,523:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,523:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,533:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,533:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,543:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,543:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,543:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,543:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,553:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,563:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,573:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,573:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,583:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,583:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,583:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,593:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,593:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,613:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,631:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,631:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,633:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,643:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,643:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,643:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,643:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,643:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,653:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,653:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:16:05,653:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:16:05,673:INFO:Calculating mean and std
2024-02-11 18:16:05,673:INFO:Creating metrics dataframe
2024-02-11 18:16:05,684:INFO:Uploading results into container
2024-02-11 18:16:05,684:INFO:Uploading model into container now
2024-02-11 18:16:05,684:INFO:_master_model_container: 9
2024-02-11 18:16:05,684:INFO:_display_container: 2
2024-02-11 18:16:05,684:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=555)
2024-02-11 18:16:05,684:INFO:create_model() successfully completed......................................
2024-02-11 18:16:06,049:INFO:SubProcess create_model() end ==================================
2024-02-11 18:16:06,049:INFO:Creating metrics dataframe
2024-02-11 18:16:06,053:INFO:Initializing Gradient Boosting Classifier
2024-02-11 18:16:06,063:INFO:Total runtime is 0.41377078294754027 minutes
2024-02-11 18:16:06,063:INFO:SubProcess create_model() called ==================================
2024-02-11 18:16:06,063:INFO:Initializing create_model()
2024-02-11 18:16:06,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:16:06,063:INFO:Checking exceptions
2024-02-11 18:16:06,063:INFO:Importing libraries
2024-02-11 18:16:06,063:INFO:Copying training dataset
2024-02-11 18:16:06,080:INFO:Defining folds
2024-02-11 18:16:06,080:INFO:Declaring metric variables
2024-02-11 18:16:06,080:INFO:Importing untrained model
2024-02-11 18:16:06,088:INFO:Gradient Boosting Classifier Imported successfully
2024-02-11 18:16:06,096:INFO:Starting cross validation
2024-02-11 18:16:06,097:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:17:33,772:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,772:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,772:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,792:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,792:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,792:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,802:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,802:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,802:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,955:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,965:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:33,975:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,055:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,065:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,065:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,125:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,135:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,145:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,155:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,165:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,165:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,462:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,480:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,530:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,540:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,550:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,885:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,895:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,895:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:34,905:INFO:Calculating mean and std
2024-02-11 18:17:34,905:INFO:Creating metrics dataframe
2024-02-11 18:17:34,918:INFO:Uploading results into container
2024-02-11 18:17:34,919:INFO:Uploading model into container now
2024-02-11 18:17:34,919:INFO:_master_model_container: 10
2024-02-11 18:17:34,919:INFO:_display_container: 2
2024-02-11 18:17:34,920:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=555, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-11 18:17:34,920:INFO:create_model() successfully completed......................................
2024-02-11 18:17:35,222:INFO:SubProcess create_model() end ==================================
2024-02-11 18:17:35,222:INFO:Creating metrics dataframe
2024-02-11 18:17:35,232:INFO:Initializing Linear Discriminant Analysis
2024-02-11 18:17:35,232:INFO:Total runtime is 1.8999172091484071 minutes
2024-02-11 18:17:35,232:INFO:SubProcess create_model() called ==================================
2024-02-11 18:17:35,232:INFO:Initializing create_model()
2024-02-11 18:17:35,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:17:35,232:INFO:Checking exceptions
2024-02-11 18:17:35,232:INFO:Importing libraries
2024-02-11 18:17:35,232:INFO:Copying training dataset
2024-02-11 18:17:35,251:INFO:Defining folds
2024-02-11 18:17:35,251:INFO:Declaring metric variables
2024-02-11 18:17:35,254:INFO:Importing untrained model
2024-02-11 18:17:35,257:INFO:Linear Discriminant Analysis Imported successfully
2024-02-11 18:17:35,262:INFO:Starting cross validation
2024-02-11 18:17:35,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:17:35,611:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,611:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,611:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,621:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,621:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,621:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,632:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,632:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,632:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,642:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,642:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,652:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,652:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,652:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,652:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,652:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,652:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,663:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,673:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,673:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,673:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,683:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:35,693:INFO:Calculating mean and std
2024-02-11 18:17:35,693:INFO:Creating metrics dataframe
2024-02-11 18:17:35,703:INFO:Uploading results into container
2024-02-11 18:17:35,703:INFO:Uploading model into container now
2024-02-11 18:17:35,703:INFO:_master_model_container: 11
2024-02-11 18:17:35,703:INFO:_display_container: 2
2024-02-11 18:17:35,703:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-11 18:17:35,703:INFO:create_model() successfully completed......................................
2024-02-11 18:17:36,002:INFO:SubProcess create_model() end ==================================
2024-02-11 18:17:36,002:INFO:Creating metrics dataframe
2024-02-11 18:17:36,022:INFO:Initializing Extra Trees Classifier
2024-02-11 18:17:36,022:INFO:Total runtime is 1.913088059425354 minutes
2024-02-11 18:17:36,027:INFO:SubProcess create_model() called ==================================
2024-02-11 18:17:36,027:INFO:Initializing create_model()
2024-02-11 18:17:36,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:17:36,027:INFO:Checking exceptions
2024-02-11 18:17:36,027:INFO:Importing libraries
2024-02-11 18:17:36,027:INFO:Copying training dataset
2024-02-11 18:17:36,038:INFO:Defining folds
2024-02-11 18:17:36,038:INFO:Declaring metric variables
2024-02-11 18:17:36,042:INFO:Importing untrained model
2024-02-11 18:17:36,045:INFO:Extra Trees Classifier Imported successfully
2024-02-11 18:17:36,046:INFO:Starting cross validation
2024-02-11 18:17:36,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:17:37,184:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,194:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,194:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,204:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,214:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,214:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,263:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,265:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,265:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,275:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,275:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,275:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,285:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,285:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,295:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:17:37,305:INFO:Calculating mean and std
2024-02-11 18:17:37,305:INFO:Creating metrics dataframe
2024-02-11 18:17:37,315:INFO:Uploading results into container
2024-02-11 18:17:37,315:INFO:Uploading model into container now
2024-02-11 18:17:37,315:INFO:_master_model_container: 12
2024-02-11 18:17:37,315:INFO:_display_container: 2
2024-02-11 18:17:37,315:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=555, verbose=0, warm_start=False)
2024-02-11 18:17:37,315:INFO:create_model() successfully completed......................................
2024-02-11 18:17:37,628:INFO:SubProcess create_model() end ==================================
2024-02-11 18:17:37,628:INFO:Creating metrics dataframe
2024-02-11 18:17:37,638:INFO:Initializing Light Gradient Boosting Machine
2024-02-11 18:17:37,638:INFO:Total runtime is 1.9400195161501568 minutes
2024-02-11 18:17:37,638:INFO:SubProcess create_model() called ==================================
2024-02-11 18:17:37,638:INFO:Initializing create_model()
2024-02-11 18:17:37,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:17:37,638:INFO:Checking exceptions
2024-02-11 18:17:37,638:INFO:Importing libraries
2024-02-11 18:17:37,638:INFO:Copying training dataset
2024-02-11 18:17:37,657:INFO:Defining folds
2024-02-11 18:17:37,657:INFO:Declaring metric variables
2024-02-11 18:17:37,657:INFO:Importing untrained model
2024-02-11 18:17:37,664:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-11 18:17:37,671:INFO:Starting cross validation
2024-02-11 18:17:37,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:18:08,344:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:08,354:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:08,364:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,133:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,143:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,153:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,463:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,493:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,503:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,553:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,563:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,583:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,873:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,883:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:09,893:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:10,243:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:10,253:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:10,263:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,432:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,442:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,452:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,772:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,782:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,792:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,802:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,812:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:12,822:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:13,392:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:13,412:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:13,422:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:18:13,432:INFO:Calculating mean and std
2024-02-11 18:18:13,442:INFO:Creating metrics dataframe
2024-02-11 18:18:13,442:INFO:Uploading results into container
2024-02-11 18:18:13,442:INFO:Uploading model into container now
2024-02-11 18:18:13,442:INFO:_master_model_container: 13
2024-02-11 18:18:13,442:INFO:_display_container: 2
2024-02-11 18:18:13,442:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=555, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-11 18:18:13,442:INFO:create_model() successfully completed......................................
2024-02-11 18:18:13,783:INFO:SubProcess create_model() end ==================================
2024-02-11 18:18:13,783:INFO:Creating metrics dataframe
2024-02-11 18:18:13,793:INFO:Initializing CatBoost Classifier
2024-02-11 18:18:13,793:INFO:Total runtime is 2.542604204018911 minutes
2024-02-11 18:18:13,803:INFO:SubProcess create_model() called ==================================
2024-02-11 18:18:13,803:INFO:Initializing create_model()
2024-02-11 18:18:13,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:18:13,803:INFO:Checking exceptions
2024-02-11 18:18:13,803:INFO:Importing libraries
2024-02-11 18:18:13,803:INFO:Copying training dataset
2024-02-11 18:18:13,814:INFO:Defining folds
2024-02-11 18:18:13,814:INFO:Declaring metric variables
2024-02-11 18:18:13,818:INFO:Importing untrained model
2024-02-11 18:18:13,822:INFO:CatBoost Classifier Imported successfully
2024-02-11 18:18:13,824:INFO:Starting cross validation
2024-02-11 18:18:13,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:20:36,145:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:36,155:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:36,185:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:38,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:38,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:38,275:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:44,927:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:44,953:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:44,963:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:47,073:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:47,093:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:47,103:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:52,826:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:52,832:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:52,842:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:56,561:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:56,571:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:56,581:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:58,525:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:58,533:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:58,543:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:58,664:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:58,675:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:58,685:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:59,026:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:59,031:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:59,041:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:59,455:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:59,455:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:59,465:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:20:59,476:INFO:Calculating mean and std
2024-02-11 18:20:59,476:INFO:Creating metrics dataframe
2024-02-11 18:20:59,486:INFO:Uploading results into container
2024-02-11 18:20:59,486:INFO:Uploading model into container now
2024-02-11 18:20:59,486:INFO:_master_model_container: 14
2024-02-11 18:20:59,486:INFO:_display_container: 2
2024-02-11 18:20:59,486:INFO:<catboost.core.CatBoostClassifier object at 0x0000022682857050>
2024-02-11 18:20:59,486:INFO:create_model() successfully completed......................................
2024-02-11 18:20:59,817:INFO:SubProcess create_model() end ==================================
2024-02-11 18:20:59,817:INFO:Creating metrics dataframe
2024-02-11 18:20:59,837:INFO:Initializing Dummy Classifier
2024-02-11 18:20:59,837:INFO:Total runtime is 5.309996787707011 minutes
2024-02-11 18:20:59,837:INFO:SubProcess create_model() called ==================================
2024-02-11 18:20:59,837:INFO:Initializing create_model()
2024-02-11 18:20:59,837:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000226868D6E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:20:59,837:INFO:Checking exceptions
2024-02-11 18:20:59,837:INFO:Importing libraries
2024-02-11 18:20:59,837:INFO:Copying training dataset
2024-02-11 18:20:59,861:INFO:Defining folds
2024-02-11 18:20:59,861:INFO:Declaring metric variables
2024-02-11 18:20:59,867:INFO:Importing untrained model
2024-02-11 18:20:59,873:INFO:Dummy Classifier Imported successfully
2024-02-11 18:20:59,882:INFO:Starting cross validation
2024-02-11 18:20:59,889:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 18:21:00,047:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,057:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,067:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,067:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,077:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,087:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,087:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,087:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,087:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,087:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,087:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,097:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,097:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,097:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,097:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,107:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,117:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,117:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,117:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,117:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,127:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,127:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,127:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,127:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,127:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,127:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,137:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,137:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,147:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,147:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 18:21:00,147:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,147:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 18:21:00,157:INFO:Calculating mean and std
2024-02-11 18:21:00,157:INFO:Creating metrics dataframe
2024-02-11 18:21:00,167:INFO:Uploading results into container
2024-02-11 18:21:00,167:INFO:Uploading model into container now
2024-02-11 18:21:00,167:INFO:_master_model_container: 15
2024-02-11 18:21:00,167:INFO:_display_container: 2
2024-02-11 18:21:00,167:INFO:DummyClassifier(constant=None, random_state=555, strategy='prior')
2024-02-11 18:21:00,167:INFO:create_model() successfully completed......................................
2024-02-11 18:21:00,504:INFO:SubProcess create_model() end ==================================
2024-02-11 18:21:00,504:INFO:Creating metrics dataframe
2024-02-11 18:21:00,537:INFO:Initializing create_model()
2024-02-11 18:21:00,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 18:21:00,537:INFO:Checking exceptions
2024-02-11 18:21:00,539:INFO:Importing libraries
2024-02-11 18:21:00,539:INFO:Copying training dataset
2024-02-11 18:21:00,550:INFO:Defining folds
2024-02-11 18:21:00,550:INFO:Declaring metric variables
2024-02-11 18:21:00,550:INFO:Importing untrained model
2024-02-11 18:21:00,550:INFO:Declaring custom model
2024-02-11 18:21:00,550:INFO:Logistic Regression Imported successfully
2024-02-11 18:21:00,550:INFO:Cross validation set to False
2024-02-11 18:21:00,550:INFO:Fitting Model
2024-02-11 18:21:01,052:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 18:21:01,052:INFO:create_model() successfully completed......................................
2024-02-11 18:21:01,521:INFO:_master_model_container: 15
2024-02-11 18:21:01,521:INFO:_display_container: 2
2024-02-11 18:21:01,521:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 18:21:01,523:INFO:compare_models() successfully completed......................................
2024-02-11 18:21:01,530:INFO:Initializing plot_model()
2024-02-11 18:21:01,530:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-11 18:21:01,530:INFO:Checking exceptions
2024-02-11 18:21:01,542:INFO:Preloading libraries
2024-02-11 18:21:01,543:INFO:Copying training dataset
2024-02-11 18:21:01,543:INFO:Plot type: boundary
2024-02-11 18:21:01,678:INFO:Fitting StandardScaler()
2024-02-11 18:21:01,698:INFO:Fitting PCA()
2024-02-11 18:21:01,871:INFO:Fitting Model
2024-02-11 18:21:02,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2024-02-11 18:21:04,337:INFO:Visual Rendered Successfully
2024-02-11 18:21:04,700:INFO:plot_model() successfully completed......................................
2024-02-11 18:21:04,707:INFO:Initializing plot_model()
2024-02-11 18:21:04,708:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-11 18:21:04,708:INFO:Checking exceptions
2024-02-11 18:21:04,709:INFO:Preloading libraries
2024-02-11 18:21:04,709:INFO:Copying training dataset
2024-02-11 18:21:04,709:INFO:Plot type: auc
2024-02-11 18:21:04,873:INFO:Fitting Model
2024-02-11 18:21:04,873:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-11 18:21:04,873:INFO:Scoring test/hold-out set
2024-02-11 18:21:05,616:INFO:Visual Rendered Successfully
2024-02-11 18:21:05,932:INFO:plot_model() successfully completed......................................
2024-02-11 18:21:05,940:INFO:Initializing plot_model()
2024-02-11 18:21:05,940:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-11 18:21:05,940:INFO:Checking exceptions
2024-02-11 18:21:05,946:INFO:Preloading libraries
2024-02-11 18:21:05,946:INFO:Copying training dataset
2024-02-11 18:21:05,947:INFO:Plot type: feature
2024-02-11 18:21:06,237:INFO:Visual Rendered Successfully
2024-02-11 18:21:06,611:INFO:plot_model() successfully completed......................................
2024-02-11 18:21:06,621:INFO:Initializing plot_model()
2024-02-11 18:21:06,621:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002268A30E710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=class_report, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-11 18:21:06,621:INFO:Checking exceptions
2024-02-11 18:21:06,632:INFO:Preloading libraries
2024-02-11 18:21:06,632:INFO:Copying training dataset
2024-02-11 18:21:06,632:INFO:Plot type: class_report
2024-02-11 18:21:06,863:INFO:Fitting Model
2024-02-11 18:21:06,863:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-11 18:21:06,863:INFO:Scoring test/hold-out set
2024-02-11 18:21:07,576:INFO:Visual Rendered Successfully
2024-02-11 18:21:07,884:INFO:plot_model() successfully completed......................................
2024-02-11 20:31:11,616:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_3ffb8eb2f3a7455987569d9cf60c2d14
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,616:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_b0d9e4476d654a82a670756b922849da_dfa69a25c9e34539af308e6418567ea8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,616:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_6debedcba87a474e9cbc5eb914adf00d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,616:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_69ba1812cd2442e8b8725eb5fdef942a_5b37ffd723ea4b7c82afef2ca70168b7
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,616:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_0bff5e1cfbab4ae38824265db0d4238b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_8072b5612b8347aa9e5496f6c346a9d2_fa4a5da18c33437086361b2be69a6448
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_2f873608f02f4806bf9097ddcdc93080
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_043437007bad4c10b280d6ea1bc48bf6_37c96f59316a479f9b3c286e6fa3204b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_202a7f84ba8d4e939b6e70e29ce08d9e
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_b0cd029b0b834489b5b5cd0df58998fa_daebb8cdf3ba4e569f6e93d1f9baafc3
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_86feef7407844c328233ac880091165f
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_2cb737e9cd044e6ea45ff7da0a9341a5_d70cfe2c544d4ff4bbac7d4454f93930
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,618:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_d2d0e3e786ad4d169009691dc0da76c2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,618:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_c9e047d9b6ca496fb803cbe628d38ff3_c764458e2fcb4f28967769636c54fc8b
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,618:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_e384fd0c886b4029ac19726f252b6ff2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,618:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_246c171a7e7a4f848d06bd3d5c144b85_b2e7b40a53134046a3324995a6deef77
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,618:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_236fbf4630504703977bb447c54fd9f0
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,618:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_b58749944cb543fc89d064b0d875a758_9203255ad2664351a76b70ca740a34a4
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,619:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_2edaa9f0aabc4f15802231c2c49fafb2
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,619:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_4ed46b144c834823a1e0088cac387aa6_c26f8af439a544d3a7392fa372a2eca6
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,619:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_6d64886ddc514b778afb54f87682ef7f
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,619:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_9c39fe8b4b8c4644877981f74fde4bbe_28ea49d582b344e3901696a1eb3006c8
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,619:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_6e7af39dbfab432e9cc262a209855b3c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,619:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_87ed9ce5903a49fcab4cf4728181bad1_4ff3eb22399c4ed0b6d76da6fd9e105c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,620:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_783c27af8da4447f956d83006d7c889d
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,620:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_c63a67b4cc2144a0a7e1e09c59e49a76_c03516aade1b4e4cb8b47f0e318cf52c
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,620:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_de1a110b9b9943a9abdd28b303ede9e5
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,620:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_9a0116e2f91e4ba4bac4ff37419ce957_91cd8d1197a64f959430829e3d1f8449
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,620:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_3e4a6ff129714ad78394ffd2a15df497
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 20:31:11,620:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\mahmo\AppData\Local\Temp\joblib_memmapping_folder_10708_718c0de7a692480180ad53d1e4629abe_c5967868b0f541c5878040346b1e8ca1
  warnings.warn("Failed to delete temporary folder: {}"

2024-02-11 22:14:39,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 22:14:39,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 22:14:39,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 22:14:39,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-11 22:15:50,971:INFO:PyCaret ClassificationExperiment
2024-02-11 22:15:50,971:INFO:Logging name: clf-default-name
2024-02-11 22:15:50,971:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-11 22:15:50,971:INFO:version 3.2.0
2024-02-11 22:15:50,972:INFO:Initializing setup()
2024-02-11 22:15:50,972:INFO:self.USI: c2ce
2024-02-11 22:15:50,972:INFO:self._variable_keys: {'_available_plots', 'seed', 'USI', 'exp_id', 'gpu_param', 'exp_name_log', 'X', 'fold_groups_param', 'X_train', 'is_multiclass', 'memory', 'html_param', 'fold_generator', 'data', 'X_test', 'y_test', 'logging_param', 'gpu_n_jobs_param', 'fix_imbalance', 'target_param', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'y_train', '_ml_usecase', 'log_plots_param', 'y', 'idx'}
2024-02-11 22:15:50,972:INFO:Checking environment
2024-02-11 22:15:50,972:INFO:python_version: 3.11.4
2024-02-11 22:15:50,972:INFO:python_build: ('main', 'Jul  5 2023 13:38:37')
2024-02-11 22:15:50,972:INFO:machine: AMD64
2024-02-11 22:15:50,972:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-11 22:15:50,972:INFO:Memory: svmem(total=17015914496, available=5831880704, percent=65.7, used=11184033792, free=5831880704)
2024-02-11 22:15:50,972:INFO:Physical Core: 6
2024-02-11 22:15:50,972:INFO:Logical Core: 12
2024-02-11 22:15:50,972:INFO:Checking libraries
2024-02-11 22:15:50,972:INFO:System:
2024-02-11 22:15:50,972:INFO:    python: 3.11.4 | packaged by Anaconda, Inc. | (main, Jul  5 2023, 13:38:37) [MSC v.1916 64 bit (AMD64)]
2024-02-11 22:15:50,972:INFO:executable: C:\Users\mahmo\anaconda3\python.exe
2024-02-11 22:15:50,972:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-11 22:15:50,972:INFO:PyCaret required dependencies:
2024-02-11 22:15:52,448:INFO:                 pip: 23.2.1
2024-02-11 22:15:52,448:INFO:          setuptools: 68.0.0
2024-02-11 22:15:52,448:INFO:             pycaret: 3.2.0
2024-02-11 22:15:52,448:INFO:             IPython: 8.12.0
2024-02-11 22:15:52,448:INFO:          ipywidgets: 8.0.4
2024-02-11 22:15:52,448:INFO:                tqdm: 4.65.0
2024-02-11 22:15:52,448:INFO:               numpy: 1.24.3
2024-02-11 22:15:52,448:INFO:              pandas: 1.5.3
2024-02-11 22:15:52,448:INFO:              jinja2: 3.1.2
2024-02-11 22:15:52,448:INFO:               scipy: 1.10.1
2024-02-11 22:15:52,448:INFO:              joblib: 1.2.0
2024-02-11 22:15:52,448:INFO:             sklearn: 1.2.2
2024-02-11 22:15:52,448:INFO:                pyod: 1.1.2
2024-02-11 22:15:52,448:INFO:            imblearn: 0.10.1
2024-02-11 22:15:52,448:INFO:   category_encoders: 2.6.3
2024-02-11 22:15:52,448:INFO:            lightgbm: 4.3.0
2024-02-11 22:15:52,448:INFO:               numba: 0.57.0
2024-02-11 22:15:52,448:INFO:            requests: 2.31.0
2024-02-11 22:15:52,448:INFO:          matplotlib: 3.7.1
2024-02-11 22:15:52,448:INFO:          scikitplot: 0.3.7
2024-02-11 22:15:52,448:INFO:         yellowbrick: 1.5
2024-02-11 22:15:52,448:INFO:              plotly: 5.9.0
2024-02-11 22:15:52,448:INFO:    plotly-resampler: Not installed
2024-02-11 22:15:52,448:INFO:             kaleido: 0.2.1
2024-02-11 22:15:52,448:INFO:           schemdraw: 0.15
2024-02-11 22:15:52,448:INFO:         statsmodels: 0.14.0
2024-02-11 22:15:52,448:INFO:              sktime: 0.21.1
2024-02-11 22:15:52,448:INFO:               tbats: 1.1.3
2024-02-11 22:15:52,448:INFO:            pmdarima: 2.0.4
2024-02-11 22:15:52,448:INFO:              psutil: 5.9.0
2024-02-11 22:15:52,448:INFO:          markupsafe: 2.1.1
2024-02-11 22:15:52,448:INFO:             pickle5: Not installed
2024-02-11 22:15:52,448:INFO:         cloudpickle: 2.2.1
2024-02-11 22:15:52,448:INFO:         deprecation: 2.1.0
2024-02-11 22:15:52,448:INFO:              xxhash: 3.4.1
2024-02-11 22:15:52,448:INFO:           wurlitzer: Not installed
2024-02-11 22:15:52,456:INFO:PyCaret optional dependencies:
2024-02-11 22:15:54,589:INFO:                shap: 0.44.1
2024-02-11 22:15:54,589:INFO:           interpret: 0.5.0
2024-02-11 22:15:54,589:INFO:                umap: 0.5.5
2024-02-11 22:15:54,589:INFO:     ydata_profiling: 4.6.0
2024-02-11 22:15:54,589:INFO:  explainerdashboard: 0.4.5
2024-02-11 22:15:54,589:INFO:             autoviz: Not installed
2024-02-11 22:15:54,589:INFO:           fairlearn: 0.7.0
2024-02-11 22:15:54,589:INFO:          deepchecks: Not installed
2024-02-11 22:15:54,589:INFO:             xgboost: Not installed
2024-02-11 22:15:54,589:INFO:            catboost: 1.2.2
2024-02-11 22:15:54,589:INFO:              kmodes: 0.12.2
2024-02-11 22:15:54,589:INFO:             mlxtend: 0.23.1
2024-02-11 22:15:54,589:INFO:       statsforecast: 1.5.0
2024-02-11 22:15:54,589:INFO:        tune_sklearn: Not installed
2024-02-11 22:15:54,589:INFO:                 ray: Not installed
2024-02-11 22:15:54,589:INFO:            hyperopt: 0.2.7
2024-02-11 22:15:54,589:INFO:              optuna: 3.5.0
2024-02-11 22:15:54,589:INFO:               skopt: 0.9.0
2024-02-11 22:15:54,589:INFO:              mlflow: 1.30.1
2024-02-11 22:15:54,589:INFO:              gradio: 3.50.2
2024-02-11 22:15:54,589:INFO:             fastapi: 0.109.1
2024-02-11 22:15:54,589:INFO:             uvicorn: 0.27.0.post1
2024-02-11 22:15:54,589:INFO:              m2cgen: 0.10.0
2024-02-11 22:15:54,589:INFO:           evidently: 0.2.8
2024-02-11 22:15:54,589:INFO:               fugue: 0.8.6
2024-02-11 22:15:54,589:INFO:           streamlit: Not installed
2024-02-11 22:15:54,589:INFO:             prophet: Not installed
2024-02-11 22:15:54,589:INFO:None
2024-02-11 22:15:54,589:INFO:Set up data.
2024-02-11 22:15:54,619:INFO:Set up folding strategy.
2024-02-11 22:15:54,619:INFO:Set up train/test split.
2024-02-11 22:15:54,629:INFO:Set up index.
2024-02-11 22:15:54,629:INFO:Assigning column types.
2024-02-11 22:15:54,639:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-11 22:15:54,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-11 22:15:54,680:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 22:15:54,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:54,720:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:54,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-11 22:15:54,942:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 22:15:54,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:54,972:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:54,972:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-11 22:15:55,012:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 22:15:55,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,042:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:55,084:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-11 22:15:55,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,116:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:55,116:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-11 22:15:55,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,184:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:55,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,265:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:55,267:INFO:Preparing preprocessing pipeline...
2024-02-11 22:15:55,267:INFO:Set up label encoding.
2024-02-11 22:15:55,267:INFO:Set up simple imputation.
2024-02-11 22:15:55,267:INFO:Set up column name cleaning.
2024-02-11 22:15:55,318:INFO:Finished creating preprocessing pipeline.
2024-02-11 22:15:55,328:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\mahmo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['itching', 'skin_rash',
                                             'nodal_skin_eruptions',
                                             'continuous_sneezing', 'shivering',
                                             'chills', 'joint_pain'...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-11 22:15:55,328:INFO:Creating final display dataframe.
2024-02-11 22:15:55,494:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 555  
1                                           prognosis  
2                                          Multiclass  
3   (vertigo) Paroymsal  Positional Vertigo: 0, AI...  
4                                         (4920, 133)  
5                                         (4920, 133)  
6                                         (3936, 133)  
7                                          (984, 133)  
8                                                 132  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               c2ce  
2024-02-11 22:15:55,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,588:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:55,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,660:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:55,660:INFO:setup() successfully completed in 4.7s...............
2024-02-11 22:15:55,668:INFO:gpu_param set to False
2024-02-11 22:15:55,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,744:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:15:55,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-11 22:15:55,833:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-11 22:16:16,913:INFO:Initializing compare_models()
2024-02-11 22:16:16,914:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-11 22:16:16,914:INFO:Checking exceptions
2024-02-11 22:16:16,920:INFO:Preparing display monitor
2024-02-11 22:16:16,942:INFO:Initializing Logistic Regression
2024-02-11 22:16:16,942:INFO:Total runtime is 0.0 minutes
2024-02-11 22:16:16,949:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:16,949:INFO:Initializing create_model()
2024-02-11 22:16:16,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:16,949:INFO:Checking exceptions
2024-02-11 22:16:16,949:INFO:Importing libraries
2024-02-11 22:16:16,949:INFO:Copying training dataset
2024-02-11 22:16:16,959:INFO:Defining folds
2024-02-11 22:16:16,959:INFO:Declaring metric variables
2024-02-11 22:16:16,966:INFO:Importing untrained model
2024-02-11 22:16:16,966:INFO:Logistic Regression Imported successfully
2024-02-11 22:16:16,976:INFO:Starting cross validation
2024-02-11 22:16:16,976:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:26,177:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,197:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,197:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,197:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,207:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,207:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,217:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,217:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,227:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,237:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,247:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,257:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,257:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,269:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,288:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,298:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,308:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,308:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,308:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,318:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,318:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,328:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,328:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,338:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,338:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,348:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:26,358:INFO:Calculating mean and std
2024-02-11 22:16:26,358:INFO:Creating metrics dataframe
2024-02-11 22:16:26,358:INFO:Uploading results into container
2024-02-11 22:16:26,369:INFO:Uploading model into container now
2024-02-11 22:16:26,369:INFO:_master_model_container: 1
2024-02-11 22:16:26,369:INFO:_display_container: 2
2024-02-11 22:16:26,371:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 22:16:26,371:INFO:create_model() successfully completed......................................
2024-02-11 22:16:26,613:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:26,613:INFO:Creating metrics dataframe
2024-02-11 22:16:26,623:INFO:Initializing K Neighbors Classifier
2024-02-11 22:16:26,623:INFO:Total runtime is 0.16134746074676515 minutes
2024-02-11 22:16:26,632:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:26,632:INFO:Initializing create_model()
2024-02-11 22:16:26,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:26,633:INFO:Checking exceptions
2024-02-11 22:16:26,633:INFO:Importing libraries
2024-02-11 22:16:26,633:INFO:Copying training dataset
2024-02-11 22:16:26,642:INFO:Defining folds
2024-02-11 22:16:26,642:INFO:Declaring metric variables
2024-02-11 22:16:26,649:INFO:Importing untrained model
2024-02-11 22:16:26,649:INFO:K Neighbors Classifier Imported successfully
2024-02-11 22:16:26,669:INFO:Starting cross validation
2024-02-11 22:16:26,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:27,215:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,225:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,225:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,225:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:27,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:30,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:30,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:30,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:30,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:30,684:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:30,684:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:30,694:INFO:Calculating mean and std
2024-02-11 22:16:30,694:INFO:Creating metrics dataframe
2024-02-11 22:16:30,694:INFO:Uploading results into container
2024-02-11 22:16:30,694:INFO:Uploading model into container now
2024-02-11 22:16:30,694:INFO:_master_model_container: 2
2024-02-11 22:16:30,694:INFO:_display_container: 2
2024-02-11 22:16:30,694:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-11 22:16:30,694:INFO:create_model() successfully completed......................................
2024-02-11 22:16:30,924:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:30,924:INFO:Creating metrics dataframe
2024-02-11 22:16:30,936:INFO:Initializing Naive Bayes
2024-02-11 22:16:30,936:INFO:Total runtime is 0.23322098652521772 minutes
2024-02-11 22:16:30,945:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:30,945:INFO:Initializing create_model()
2024-02-11 22:16:30,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:30,945:INFO:Checking exceptions
2024-02-11 22:16:30,945:INFO:Importing libraries
2024-02-11 22:16:30,945:INFO:Copying training dataset
2024-02-11 22:16:30,957:INFO:Defining folds
2024-02-11 22:16:30,957:INFO:Declaring metric variables
2024-02-11 22:16:30,960:INFO:Importing untrained model
2024-02-11 22:16:30,966:INFO:Naive Bayes Imported successfully
2024-02-11 22:16:30,973:INFO:Starting cross validation
2024-02-11 22:16:30,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:31,174:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,199:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,209:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,209:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,209:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,209:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,209:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,220:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,230:INFO:Calculating mean and std
2024-02-11 22:16:31,230:INFO:Creating metrics dataframe
2024-02-11 22:16:31,230:INFO:Uploading results into container
2024-02-11 22:16:31,230:INFO:Uploading model into container now
2024-02-11 22:16:31,230:INFO:_master_model_container: 3
2024-02-11 22:16:31,230:INFO:_display_container: 2
2024-02-11 22:16:31,230:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-11 22:16:31,230:INFO:create_model() successfully completed......................................
2024-02-11 22:16:31,450:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:31,450:INFO:Creating metrics dataframe
2024-02-11 22:16:31,460:INFO:Initializing Decision Tree Classifier
2024-02-11 22:16:31,460:INFO:Total runtime is 0.24196993907292688 minutes
2024-02-11 22:16:31,460:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:31,460:INFO:Initializing create_model()
2024-02-11 22:16:31,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:31,460:INFO:Checking exceptions
2024-02-11 22:16:31,460:INFO:Importing libraries
2024-02-11 22:16:31,460:INFO:Copying training dataset
2024-02-11 22:16:31,474:INFO:Defining folds
2024-02-11 22:16:31,474:INFO:Declaring metric variables
2024-02-11 22:16:31,482:INFO:Importing untrained model
2024-02-11 22:16:31,484:INFO:Decision Tree Classifier Imported successfully
2024-02-11 22:16:31,484:INFO:Starting cross validation
2024-02-11 22:16:31,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:31,671:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,681:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,691:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,701:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,701:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,701:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,701:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,701:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,701:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,701:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,711:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:31,721:INFO:Calculating mean and std
2024-02-11 22:16:31,721:INFO:Creating metrics dataframe
2024-02-11 22:16:31,721:INFO:Uploading results into container
2024-02-11 22:16:31,721:INFO:Uploading model into container now
2024-02-11 22:16:31,721:INFO:_master_model_container: 4
2024-02-11 22:16:31,721:INFO:_display_container: 2
2024-02-11 22:16:31,721:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=555, splitter='best')
2024-02-11 22:16:31,721:INFO:create_model() successfully completed......................................
2024-02-11 22:16:31,933:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:31,933:INFO:Creating metrics dataframe
2024-02-11 22:16:31,943:INFO:Initializing SVM - Linear Kernel
2024-02-11 22:16:31,943:INFO:Total runtime is 0.2500097473462423 minutes
2024-02-11 22:16:31,955:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:31,956:INFO:Initializing create_model()
2024-02-11 22:16:31,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:31,956:INFO:Checking exceptions
2024-02-11 22:16:31,956:INFO:Importing libraries
2024-02-11 22:16:31,956:INFO:Copying training dataset
2024-02-11 22:16:31,968:INFO:Defining folds
2024-02-11 22:16:31,968:INFO:Declaring metric variables
2024-02-11 22:16:31,968:INFO:Importing untrained model
2024-02-11 22:16:31,974:INFO:SVM - Linear Kernel Imported successfully
2024-02-11 22:16:31,978:INFO:Starting cross validation
2024-02-11 22:16:31,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:32,261:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,261:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,261:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,274:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,281:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,341:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,341:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,341:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,351:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,371:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,371:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,374:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,374:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,374:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,381:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,381:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,381:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,401:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,401:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,411:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,411:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,411:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,411:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,411:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,421:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,431:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,431:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,431:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,451:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-11 22:16:32,451:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,451:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,461:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,461:INFO:Calculating mean and std
2024-02-11 22:16:32,471:INFO:Creating metrics dataframe
2024-02-11 22:16:32,471:INFO:Uploading results into container
2024-02-11 22:16:32,474:INFO:Uploading model into container now
2024-02-11 22:16:32,474:INFO:_master_model_container: 5
2024-02-11 22:16:32,474:INFO:_display_container: 2
2024-02-11 22:16:32,474:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=555, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-11 22:16:32,474:INFO:create_model() successfully completed......................................
2024-02-11 22:16:32,684:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:32,684:INFO:Creating metrics dataframe
2024-02-11 22:16:32,694:INFO:Initializing Ridge Classifier
2024-02-11 22:16:32,694:INFO:Total runtime is 0.2625276605288188 minutes
2024-02-11 22:16:32,704:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:32,704:INFO:Initializing create_model()
2024-02-11 22:16:32,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:32,706:INFO:Checking exceptions
2024-02-11 22:16:32,706:INFO:Importing libraries
2024-02-11 22:16:32,706:INFO:Copying training dataset
2024-02-11 22:16:32,718:INFO:Defining folds
2024-02-11 22:16:32,718:INFO:Declaring metric variables
2024-02-11 22:16:32,718:INFO:Importing untrained model
2024-02-11 22:16:32,718:INFO:Ridge Classifier Imported successfully
2024-02-11 22:16:32,732:INFO:Starting cross validation
2024-02-11 22:16:32,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,890:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,910:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,920:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,920:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:32,930:INFO:Calculating mean and std
2024-02-11 22:16:32,930:INFO:Creating metrics dataframe
2024-02-11 22:16:32,941:INFO:Uploading results into container
2024-02-11 22:16:32,941:INFO:Uploading model into container now
2024-02-11 22:16:32,941:INFO:_master_model_container: 6
2024-02-11 22:16:32,941:INFO:_display_container: 2
2024-02-11 22:16:32,943:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=555, solver='auto',
                tol=0.0001)
2024-02-11 22:16:32,943:INFO:create_model() successfully completed......................................
2024-02-11 22:16:33,161:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:33,161:INFO:Creating metrics dataframe
2024-02-11 22:16:33,171:INFO:Initializing Random Forest Classifier
2024-02-11 22:16:33,171:INFO:Total runtime is 0.2704712311426799 minutes
2024-02-11 22:16:33,177:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:33,177:INFO:Initializing create_model()
2024-02-11 22:16:33,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:33,178:INFO:Checking exceptions
2024-02-11 22:16:33,178:INFO:Importing libraries
2024-02-11 22:16:33,178:INFO:Copying training dataset
2024-02-11 22:16:33,182:INFO:Defining folds
2024-02-11 22:16:33,182:INFO:Declaring metric variables
2024-02-11 22:16:33,191:INFO:Importing untrained model
2024-02-11 22:16:33,191:INFO:Random Forest Classifier Imported successfully
2024-02-11 22:16:33,201:INFO:Starting cross validation
2024-02-11 22:16:33,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:34,089:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,099:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,099:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,099:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,099:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,119:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,129:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,129:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,149:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,189:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,219:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,229:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,239:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,280:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,280:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,280:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,280:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,290:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,290:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,290:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,290:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,290:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,300:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,300:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,300:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,310:INFO:Calculating mean and std
2024-02-11 22:16:34,310:INFO:Creating metrics dataframe
2024-02-11 22:16:34,324:INFO:Uploading results into container
2024-02-11 22:16:34,324:INFO:Uploading model into container now
2024-02-11 22:16:34,324:INFO:_master_model_container: 7
2024-02-11 22:16:34,324:INFO:_display_container: 2
2024-02-11 22:16:34,324:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=555, verbose=0, warm_start=False)
2024-02-11 22:16:34,324:INFO:create_model() successfully completed......................................
2024-02-11 22:16:34,554:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:34,554:INFO:Creating metrics dataframe
2024-02-11 22:16:34,564:INFO:Initializing Quadratic Discriminant Analysis
2024-02-11 22:16:34,564:INFO:Total runtime is 0.29369822343190516 minutes
2024-02-11 22:16:34,572:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:34,572:INFO:Initializing create_model()
2024-02-11 22:16:34,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:34,572:INFO:Checking exceptions
2024-02-11 22:16:34,572:INFO:Importing libraries
2024-02-11 22:16:34,572:INFO:Copying training dataset
2024-02-11 22:16:34,584:INFO:Defining folds
2024-02-11 22:16:34,585:INFO:Declaring metric variables
2024-02-11 22:16:34,585:INFO:Importing untrained model
2024-02-11 22:16:34,585:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-11 22:16:34,600:INFO:Starting cross validation
2024-02-11 22:16:34,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,718:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-11 22:16:34,948:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,976:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,976:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:34,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:34,998:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:35,008:INFO:Calculating mean and std
2024-02-11 22:16:35,008:INFO:Creating metrics dataframe
2024-02-11 22:16:35,008:INFO:Uploading results into container
2024-02-11 22:16:35,008:INFO:Uploading model into container now
2024-02-11 22:16:35,008:INFO:_master_model_container: 8
2024-02-11 22:16:35,008:INFO:_display_container: 2
2024-02-11 22:16:35,008:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-11 22:16:35,008:INFO:create_model() successfully completed......................................
2024-02-11 22:16:35,226:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:35,226:INFO:Creating metrics dataframe
2024-02-11 22:16:35,236:INFO:Initializing Ada Boost Classifier
2024-02-11 22:16:35,246:INFO:Total runtime is 0.3050606926282247 minutes
2024-02-11 22:16:35,246:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:35,251:INFO:Initializing create_model()
2024-02-11 22:16:35,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:35,251:INFO:Checking exceptions
2024-02-11 22:16:35,251:INFO:Importing libraries
2024-02-11 22:16:35,251:INFO:Copying training dataset
2024-02-11 22:16:35,261:INFO:Defining folds
2024-02-11 22:16:35,262:INFO:Declaring metric variables
2024-02-11 22:16:35,265:INFO:Importing untrained model
2024-02-11 22:16:35,268:INFO:Ada Boost Classifier Imported successfully
2024-02-11 22:16:35,269:INFO:Starting cross validation
2024-02-11 22:16:35,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:16:36,690:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,700:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,700:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,700:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,700:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,710:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,710:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,710:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,710:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,710:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,720:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,720:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,720:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,730:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,730:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,730:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,750:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,750:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,750:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,750:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,750:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,770:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,770:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,780:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,790:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,790:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:16:36,790:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:16:36,800:INFO:Calculating mean and std
2024-02-11 22:16:36,800:INFO:Creating metrics dataframe
2024-02-11 22:16:36,810:INFO:Uploading results into container
2024-02-11 22:16:36,810:INFO:Uploading model into container now
2024-02-11 22:16:36,810:INFO:_master_model_container: 9
2024-02-11 22:16:36,810:INFO:_display_container: 2
2024-02-11 22:16:36,810:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=555)
2024-02-11 22:16:36,810:INFO:create_model() successfully completed......................................
2024-02-11 22:16:37,065:INFO:SubProcess create_model() end ==================================
2024-02-11 22:16:37,065:INFO:Creating metrics dataframe
2024-02-11 22:16:37,075:INFO:Initializing Gradient Boosting Classifier
2024-02-11 22:16:37,075:INFO:Total runtime is 0.33554812272389734 minutes
2024-02-11 22:16:37,084:INFO:SubProcess create_model() called ==================================
2024-02-11 22:16:37,084:INFO:Initializing create_model()
2024-02-11 22:16:37,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:16:37,084:INFO:Checking exceptions
2024-02-11 22:16:37,084:INFO:Importing libraries
2024-02-11 22:16:37,084:INFO:Copying training dataset
2024-02-11 22:16:37,099:INFO:Defining folds
2024-02-11 22:16:37,099:INFO:Declaring metric variables
2024-02-11 22:16:37,102:INFO:Importing untrained model
2024-02-11 22:16:37,106:INFO:Gradient Boosting Classifier Imported successfully
2024-02-11 22:16:37,118:INFO:Starting cross validation
2024-02-11 22:16:37,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:17:54,875:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,885:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,903:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,925:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,935:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,945:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,965:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,975:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,975:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,985:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,985:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,985:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,996:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,996:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:54,996:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,006:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,006:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,016:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,016:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,026:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,026:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,106:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,106:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,116:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,206:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,237:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,247:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,247:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,257:INFO:Calculating mean and std
2024-02-11 22:17:55,257:INFO:Creating metrics dataframe
2024-02-11 22:17:55,267:INFO:Uploading results into container
2024-02-11 22:17:55,267:INFO:Uploading model into container now
2024-02-11 22:17:55,267:INFO:_master_model_container: 10
2024-02-11 22:17:55,267:INFO:_display_container: 2
2024-02-11 22:17:55,267:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=555, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-11 22:17:55,267:INFO:create_model() successfully completed......................................
2024-02-11 22:17:55,504:INFO:SubProcess create_model() end ==================================
2024-02-11 22:17:55,504:INFO:Creating metrics dataframe
2024-02-11 22:17:55,508:INFO:Initializing Linear Discriminant Analysis
2024-02-11 22:17:55,508:INFO:Total runtime is 1.6427592237790427 minutes
2024-02-11 22:17:55,518:INFO:SubProcess create_model() called ==================================
2024-02-11 22:17:55,518:INFO:Initializing create_model()
2024-02-11 22:17:55,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:17:55,518:INFO:Checking exceptions
2024-02-11 22:17:55,518:INFO:Importing libraries
2024-02-11 22:17:55,518:INFO:Copying training dataset
2024-02-11 22:17:55,528:INFO:Defining folds
2024-02-11 22:17:55,528:INFO:Declaring metric variables
2024-02-11 22:17:55,534:INFO:Importing untrained model
2024-02-11 22:17:55,537:INFO:Linear Discriminant Analysis Imported successfully
2024-02-11 22:17:55,540:INFO:Starting cross validation
2024-02-11 22:17:55,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:17:55,927:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,937:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,947:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,947:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,947:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,947:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,947:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:55,998:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:56,008:INFO:Calculating mean and std
2024-02-11 22:17:56,008:INFO:Creating metrics dataframe
2024-02-11 22:17:56,018:INFO:Uploading results into container
2024-02-11 22:17:56,018:INFO:Uploading model into container now
2024-02-11 22:17:56,018:INFO:_master_model_container: 11
2024-02-11 22:17:56,018:INFO:_display_container: 2
2024-02-11 22:17:56,018:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-11 22:17:56,018:INFO:create_model() successfully completed......................................
2024-02-11 22:17:56,330:INFO:SubProcess create_model() end ==================================
2024-02-11 22:17:56,330:INFO:Creating metrics dataframe
2024-02-11 22:17:56,340:INFO:Initializing Extra Trees Classifier
2024-02-11 22:17:56,340:INFO:Total runtime is 1.6566283424695334 minutes
2024-02-11 22:17:56,351:INFO:SubProcess create_model() called ==================================
2024-02-11 22:17:56,356:INFO:Initializing create_model()
2024-02-11 22:17:56,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:17:56,356:INFO:Checking exceptions
2024-02-11 22:17:56,356:INFO:Importing libraries
2024-02-11 22:17:56,356:INFO:Copying training dataset
2024-02-11 22:17:56,367:INFO:Defining folds
2024-02-11 22:17:56,367:INFO:Declaring metric variables
2024-02-11 22:17:56,367:INFO:Importing untrained model
2024-02-11 22:17:56,377:INFO:Extra Trees Classifier Imported successfully
2024-02-11 22:17:56,383:INFO:Starting cross validation
2024-02-11 22:17:56,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:17:57,487:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,487:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,487:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,497:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,497:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,504:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,507:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,507:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,517:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,517:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,537:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,537:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,547:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,547:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,547:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,557:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,567:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,577:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,607:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,617:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,628:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,628:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,628:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,730:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,740:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:17:57,750:INFO:Calculating mean and std
2024-02-11 22:17:57,750:INFO:Creating metrics dataframe
2024-02-11 22:17:57,750:INFO:Uploading results into container
2024-02-11 22:17:57,760:INFO:Uploading model into container now
2024-02-11 22:17:57,760:INFO:_master_model_container: 12
2024-02-11 22:17:57,760:INFO:_display_container: 2
2024-02-11 22:17:57,760:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=555, verbose=0, warm_start=False)
2024-02-11 22:17:57,760:INFO:create_model() successfully completed......................................
2024-02-11 22:17:57,970:INFO:SubProcess create_model() end ==================================
2024-02-11 22:17:57,970:INFO:Creating metrics dataframe
2024-02-11 22:17:57,983:INFO:Initializing Light Gradient Boosting Machine
2024-02-11 22:17:57,983:INFO:Total runtime is 1.6840141971906026 minutes
2024-02-11 22:17:57,993:INFO:SubProcess create_model() called ==================================
2024-02-11 22:17:57,993:INFO:Initializing create_model()
2024-02-11 22:17:57,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:17:57,993:INFO:Checking exceptions
2024-02-11 22:17:57,993:INFO:Importing libraries
2024-02-11 22:17:57,993:INFO:Copying training dataset
2024-02-11 22:17:58,004:INFO:Defining folds
2024-02-11 22:17:58,004:INFO:Declaring metric variables
2024-02-11 22:17:58,004:INFO:Importing untrained model
2024-02-11 22:17:58,004:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-11 22:17:58,017:INFO:Starting cross validation
2024-02-11 22:17:58,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:18:26,914:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:26,924:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:26,934:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:26,984:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:27,004:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:27,004:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:27,734:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:27,744:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:27,774:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:27,984:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:27,994:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,034:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,094:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,144:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,154:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,314:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,324:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,354:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,814:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,824:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,884:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,954:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,964:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:28,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:29,124:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:29,134:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:29,144:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:29,264:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:29,274:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:29,284:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:18:29,294:INFO:Calculating mean and std
2024-02-11 22:18:29,294:INFO:Creating metrics dataframe
2024-02-11 22:18:29,307:INFO:Uploading results into container
2024-02-11 22:18:29,307:INFO:Uploading model into container now
2024-02-11 22:18:29,307:INFO:_master_model_container: 13
2024-02-11 22:18:29,307:INFO:_display_container: 2
2024-02-11 22:18:29,307:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=555, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-11 22:18:29,307:INFO:create_model() successfully completed......................................
2024-02-11 22:18:29,539:INFO:SubProcess create_model() end ==================================
2024-02-11 22:18:29,539:INFO:Creating metrics dataframe
2024-02-11 22:18:29,549:INFO:Initializing CatBoost Classifier
2024-02-11 22:18:29,549:INFO:Total runtime is 2.2101087530454 minutes
2024-02-11 22:18:29,549:INFO:SubProcess create_model() called ==================================
2024-02-11 22:18:29,549:INFO:Initializing create_model()
2024-02-11 22:18:29,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:18:29,549:INFO:Checking exceptions
2024-02-11 22:18:29,549:INFO:Importing libraries
2024-02-11 22:18:29,549:INFO:Copying training dataset
2024-02-11 22:18:29,566:INFO:Defining folds
2024-02-11 22:18:29,566:INFO:Declaring metric variables
2024-02-11 22:18:29,569:INFO:Importing untrained model
2024-02-11 22:18:29,572:INFO:CatBoost Classifier Imported successfully
2024-02-11 22:18:29,574:INFO:Starting cross validation
2024-02-11 22:18:29,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:20:51,310:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:51,320:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:51,350:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:53,050:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:53,080:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:53,090:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:56,569:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:56,579:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:56,589:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:58,149:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:58,159:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:20:58,179:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:01,708:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:01,728:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:01,738:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:05,047:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:05,057:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:05,067:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:06,707:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:06,717:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:06,727:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,413:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,423:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,433:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,635:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,646:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,646:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,817:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,827:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,827:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:07,837:INFO:Calculating mean and std
2024-02-11 22:21:07,847:INFO:Creating metrics dataframe
2024-02-11 22:21:07,847:INFO:Uploading results into container
2024-02-11 22:21:07,847:INFO:Uploading model into container now
2024-02-11 22:21:07,847:INFO:_master_model_container: 14
2024-02-11 22:21:07,847:INFO:_display_container: 2
2024-02-11 22:21:07,847:INFO:<catboost.core.CatBoostClassifier object at 0x000001EA3F50A6D0>
2024-02-11 22:21:07,847:INFO:create_model() successfully completed......................................
2024-02-11 22:21:08,136:INFO:SubProcess create_model() end ==================================
2024-02-11 22:21:08,136:INFO:Creating metrics dataframe
2024-02-11 22:21:08,152:INFO:Initializing Dummy Classifier
2024-02-11 22:21:08,152:INFO:Total runtime is 4.853499515851339 minutes
2024-02-11 22:21:08,162:INFO:SubProcess create_model() called ==================================
2024-02-11 22:21:08,162:INFO:Initializing create_model()
2024-02-11 22:21:08,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EA412A70D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:21:08,162:INFO:Checking exceptions
2024-02-11 22:21:08,162:INFO:Importing libraries
2024-02-11 22:21:08,166:INFO:Copying training dataset
2024-02-11 22:21:08,179:INFO:Defining folds
2024-02-11 22:21:08,179:INFO:Declaring metric variables
2024-02-11 22:21:08,184:INFO:Importing untrained model
2024-02-11 22:21:08,187:INFO:Dummy Classifier Imported successfully
2024-02-11 22:21:08,197:INFO:Starting cross validation
2024-02-11 22:21:08,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-11 22:21:08,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,366:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,366:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,366:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,366:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,366:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,366:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,375:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,375:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,375:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,375:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,385:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,385:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,385:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,385:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,385:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,385:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,385:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,395:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,395:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,395:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,395:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,395:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,405:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,405:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,405:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,405:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,405:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,405:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,405:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,416:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,416:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,416:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-11 22:21:08,426:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-11 22:21:08,436:INFO:Calculating mean and std
2024-02-11 22:21:08,436:INFO:Creating metrics dataframe
2024-02-11 22:21:08,436:INFO:Uploading results into container
2024-02-11 22:21:08,436:INFO:Uploading model into container now
2024-02-11 22:21:08,446:INFO:_master_model_container: 15
2024-02-11 22:21:08,446:INFO:_display_container: 2
2024-02-11 22:21:08,446:INFO:DummyClassifier(constant=None, random_state=555, strategy='prior')
2024-02-11 22:21:08,446:INFO:create_model() successfully completed......................................
2024-02-11 22:21:08,700:INFO:SubProcess create_model() end ==================================
2024-02-11 22:21:08,700:INFO:Creating metrics dataframe
2024-02-11 22:21:08,733:INFO:Initializing create_model()
2024-02-11 22:21:08,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-11 22:21:08,733:INFO:Checking exceptions
2024-02-11 22:21:08,735:INFO:Importing libraries
2024-02-11 22:21:08,735:INFO:Copying training dataset
2024-02-11 22:21:08,739:INFO:Defining folds
2024-02-11 22:21:08,739:INFO:Declaring metric variables
2024-02-11 22:21:08,739:INFO:Importing untrained model
2024-02-11 22:21:08,739:INFO:Declaring custom model
2024-02-11 22:21:08,748:INFO:Logistic Regression Imported successfully
2024-02-11 22:21:08,748:INFO:Cross validation set to False
2024-02-11 22:21:08,748:INFO:Fitting Model
2024-02-11 22:21:09,130:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 22:21:09,130:INFO:create_model() successfully completed......................................
2024-02-11 22:21:09,415:INFO:_master_model_container: 15
2024-02-11 22:21:09,415:INFO:_display_container: 2
2024-02-11 22:21:09,415:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-11 22:21:09,417:INFO:compare_models() successfully completed......................................
2024-02-11 22:21:14,391:INFO:Initializing plot_model()
2024-02-11 22:21:14,391:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA318526D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-11 22:21:14,391:INFO:Checking exceptions
2024-02-11 22:21:14,398:INFO:Preloading libraries
2024-02-11 22:21:14,398:INFO:Copying training dataset
2024-02-11 22:21:14,398:INFO:Plot type: boundary
2024-02-11 22:21:14,483:INFO:Fitting StandardScaler()
2024-02-11 22:21:14,495:INFO:Fitting PCA()
2024-02-11 22:21:14,615:INFO:Fitting Model
2024-02-11 22:21:15,620:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2024-02-11 22:21:16,683:INFO:Visual Rendered Successfully
2024-02-11 22:21:16,943:INFO:plot_model() successfully completed......................................
2024-02-12 20:11:59,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-12 20:11:59,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-12 20:11:59,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-12 20:11:59,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-12 20:12:12,192:INFO:PyCaret ClassificationExperiment
2024-02-12 20:12:12,192:INFO:Logging name: clf-default-name
2024-02-12 20:12:12,192:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-12 20:12:12,192:INFO:version 3.2.0
2024-02-12 20:12:12,192:INFO:Initializing setup()
2024-02-12 20:12:12,196:INFO:self.USI: 34dc
2024-02-12 20:12:12,196:INFO:self._variable_keys: {'seed', 'y', 'X', '_ml_usecase', 'memory', 'pipeline', 'gpu_param', 'fold_groups_param', 'log_plots_param', '_available_plots', 'y_train', 'idx', 'fold_generator', 'fix_imbalance', 'gpu_n_jobs_param', 'exp_id', 'USI', 'y_test', 'target_param', 'is_multiclass', 'X_train', 'logging_param', 'exp_name_log', 'X_test', 'data', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2024-02-12 20:12:12,196:INFO:Checking environment
2024-02-12 20:12:12,196:INFO:python_version: 3.11.4
2024-02-12 20:12:12,196:INFO:python_build: ('main', 'Jul  5 2023 13:38:37')
2024-02-12 20:12:12,196:INFO:machine: AMD64
2024-02-12 20:12:12,196:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-12 20:12:12,196:INFO:Memory: svmem(total=17015914496, available=7762333696, percent=54.4, used=9253580800, free=7762333696)
2024-02-12 20:12:12,196:INFO:Physical Core: 6
2024-02-12 20:12:12,196:INFO:Logical Core: 12
2024-02-12 20:12:12,197:INFO:Checking libraries
2024-02-12 20:12:12,197:INFO:System:
2024-02-12 20:12:12,197:INFO:    python: 3.11.4 | packaged by Anaconda, Inc. | (main, Jul  5 2023, 13:38:37) [MSC v.1916 64 bit (AMD64)]
2024-02-12 20:12:12,197:INFO:executable: C:\Users\mahmo\anaconda3\python.exe
2024-02-12 20:12:12,197:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-12 20:12:12,197:INFO:PyCaret required dependencies:
2024-02-12 20:12:14,643:INFO:                 pip: 23.2.1
2024-02-12 20:12:14,643:INFO:          setuptools: 68.0.0
2024-02-12 20:12:14,643:INFO:             pycaret: 3.2.0
2024-02-12 20:12:14,643:INFO:             IPython: 8.12.0
2024-02-12 20:12:14,643:INFO:          ipywidgets: 8.0.4
2024-02-12 20:12:14,643:INFO:                tqdm: 4.65.0
2024-02-12 20:12:14,643:INFO:               numpy: 1.24.3
2024-02-12 20:12:14,646:INFO:              pandas: 1.5.3
2024-02-12 20:12:14,646:INFO:              jinja2: 3.1.2
2024-02-12 20:12:14,646:INFO:               scipy: 1.10.1
2024-02-12 20:12:14,647:INFO:              joblib: 1.2.0
2024-02-12 20:12:14,647:INFO:             sklearn: 1.2.2
2024-02-12 20:12:14,647:INFO:                pyod: 1.1.2
2024-02-12 20:12:14,647:INFO:            imblearn: 0.10.1
2024-02-12 20:12:14,647:INFO:   category_encoders: 2.6.3
2024-02-12 20:12:14,647:INFO:            lightgbm: 4.3.0
2024-02-12 20:12:14,647:INFO:               numba: 0.57.0
2024-02-12 20:12:14,648:INFO:            requests: 2.31.0
2024-02-12 20:12:14,648:INFO:          matplotlib: 3.7.1
2024-02-12 20:12:14,648:INFO:          scikitplot: 0.3.7
2024-02-12 20:12:14,648:INFO:         yellowbrick: 1.5
2024-02-12 20:12:14,648:INFO:              plotly: 5.9.0
2024-02-12 20:12:14,648:INFO:    plotly-resampler: Not installed
2024-02-12 20:12:14,648:INFO:             kaleido: 0.2.1
2024-02-12 20:12:14,648:INFO:           schemdraw: 0.15
2024-02-12 20:12:14,648:INFO:         statsmodels: 0.14.0
2024-02-12 20:12:14,648:INFO:              sktime: 0.21.1
2024-02-12 20:12:14,648:INFO:               tbats: 1.1.3
2024-02-12 20:12:14,648:INFO:            pmdarima: 2.0.4
2024-02-12 20:12:14,648:INFO:              psutil: 5.9.0
2024-02-12 20:12:14,648:INFO:          markupsafe: 2.1.1
2024-02-12 20:12:14,648:INFO:             pickle5: Not installed
2024-02-12 20:12:14,648:INFO:         cloudpickle: 2.2.1
2024-02-12 20:12:14,648:INFO:         deprecation: 2.1.0
2024-02-12 20:12:14,648:INFO:              xxhash: 3.4.1
2024-02-12 20:12:14,650:INFO:           wurlitzer: Not installed
2024-02-12 20:12:14,650:INFO:PyCaret optional dependencies:
2024-02-12 20:12:19,175:INFO:                shap: 0.44.1
2024-02-12 20:12:19,175:INFO:           interpret: 0.5.0
2024-02-12 20:12:19,175:INFO:                umap: 0.5.5
2024-02-12 20:12:19,175:INFO:     ydata_profiling: 4.6.0
2024-02-12 20:12:19,176:INFO:  explainerdashboard: 0.4.5
2024-02-12 20:12:19,176:INFO:             autoviz: Not installed
2024-02-12 20:12:19,176:INFO:           fairlearn: 0.7.0
2024-02-12 20:12:19,176:INFO:          deepchecks: Not installed
2024-02-12 20:12:19,176:INFO:             xgboost: Not installed
2024-02-12 20:12:19,176:INFO:            catboost: 1.2.2
2024-02-12 20:12:19,176:INFO:              kmodes: 0.12.2
2024-02-12 20:12:19,176:INFO:             mlxtend: 0.23.1
2024-02-12 20:12:19,176:INFO:       statsforecast: 1.5.0
2024-02-12 20:12:19,176:INFO:        tune_sklearn: Not installed
2024-02-12 20:12:19,176:INFO:                 ray: Not installed
2024-02-12 20:12:19,176:INFO:            hyperopt: 0.2.7
2024-02-12 20:12:19,176:INFO:              optuna: 3.5.0
2024-02-12 20:12:19,176:INFO:               skopt: 0.9.0
2024-02-12 20:12:19,176:INFO:              mlflow: 1.30.1
2024-02-12 20:12:19,176:INFO:              gradio: 3.50.2
2024-02-12 20:12:19,176:INFO:             fastapi: 0.109.1
2024-02-12 20:12:19,176:INFO:             uvicorn: 0.27.0.post1
2024-02-12 20:12:19,176:INFO:              m2cgen: 0.10.0
2024-02-12 20:12:19,176:INFO:           evidently: 0.2.8
2024-02-12 20:12:19,176:INFO:               fugue: 0.8.6
2024-02-12 20:12:19,176:INFO:           streamlit: Not installed
2024-02-12 20:12:19,176:INFO:             prophet: Not installed
2024-02-12 20:12:19,176:INFO:None
2024-02-12 20:12:19,176:INFO:Set up data.
2024-02-12 20:12:19,276:INFO:Set up folding strategy.
2024-02-12 20:12:19,276:INFO:Set up train/test split.
2024-02-12 20:12:19,331:INFO:Set up index.
2024-02-12 20:12:19,331:INFO:Assigning column types.
2024-02-12 20:12:19,358:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-12 20:12:19,499:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-12 20:12:19,503:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-12 20:12:19,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:19,611:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:19,958:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-12 20:12:19,958:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-12 20:12:20,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:20,059:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:20,059:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-12 20:12:20,190:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-12 20:12:20,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:20,293:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:20,413:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-12 20:12:20,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:20,486:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:20,489:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-12 20:12:20,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:20,735:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:21,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:21,035:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:21,042:INFO:Preparing preprocessing pipeline...
2024-02-12 20:12:21,042:INFO:Set up label encoding.
2024-02-12 20:12:21,053:INFO:Set up simple imputation.
2024-02-12 20:12:21,053:INFO:Set up column name cleaning.
2024-02-12 20:12:21,277:INFO:Finished creating preprocessing pipeline.
2024-02-12 20:12:21,297:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\mahmo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['itching', 'skin_rash',
                                             'nodal_skin_eruptions',
                                             'continuous_sneezing', 'shivering',
                                             'chills', 'joint_pain'...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-12 20:12:21,297:INFO:Creating final display dataframe.
2024-02-12 20:12:21,858:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 555  
1                                           prognosis  
2                                          Multiclass  
3   (vertigo) Paroymsal  Positional Vertigo: 0, AI...  
4                                         (4920, 133)  
5                                         (4920, 133)  
6                                         (3936, 133)  
7                                          (984, 133)  
8                                                 132  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               34dc  
2024-02-12 20:12:22,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:22,070:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:22,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:22,354:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:22,356:INFO:setup() successfully completed in 10.18s...............
2024-02-12 20:12:22,370:INFO:gpu_param set to False
2024-02-12 20:12:22,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:22,647:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:22,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-12 20:12:22,936:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-12 20:12:22,971:INFO:Initializing compare_models()
2024-02-12 20:12:22,971:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-12 20:12:22,971:INFO:Checking exceptions
2024-02-12 20:12:22,999:INFO:Preparing display monitor
2024-02-12 20:12:23,085:INFO:Initializing Logistic Regression
2024-02-12 20:12:23,085:INFO:Total runtime is 0.0 minutes
2024-02-12 20:12:23,098:INFO:SubProcess create_model() called ==================================
2024-02-12 20:12:23,098:INFO:Initializing create_model()
2024-02-12 20:12:23,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:12:23,101:INFO:Checking exceptions
2024-02-12 20:12:23,101:INFO:Importing libraries
2024-02-12 20:12:23,101:INFO:Copying training dataset
2024-02-12 20:12:23,140:INFO:Defining folds
2024-02-12 20:12:23,140:INFO:Declaring metric variables
2024-02-12 20:12:23,147:INFO:Importing untrained model
2024-02-12 20:12:23,163:INFO:Logistic Regression Imported successfully
2024-02-12 20:12:23,188:INFO:Starting cross validation
2024-02-12 20:12:23,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:12:46,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,224:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,254:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,261:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,501:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,501:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,501:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,514:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,520:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,520:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,540:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,546:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,547:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,672:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,697:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,712:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,755:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,782:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,802:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,802:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,825:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:46,843:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:47,033:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:47,049:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:47,072:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:47,817:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:47,837:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:47,856:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:47,887:INFO:Calculating mean and std
2024-02-12 20:12:47,887:INFO:Creating metrics dataframe
2024-02-12 20:12:47,899:INFO:Uploading results into container
2024-02-12 20:12:47,907:INFO:Uploading model into container now
2024-02-12 20:12:47,907:INFO:_master_model_container: 1
2024-02-12 20:12:47,907:INFO:_display_container: 2
2024-02-12 20:12:47,907:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-12 20:12:47,907:INFO:create_model() successfully completed......................................
2024-02-12 20:12:48,248:INFO:SubProcess create_model() end ==================================
2024-02-12 20:12:48,248:INFO:Creating metrics dataframe
2024-02-12 20:12:48,272:INFO:Initializing K Neighbors Classifier
2024-02-12 20:12:48,272:INFO:Total runtime is 0.4197818557421366 minutes
2024-02-12 20:12:48,286:INFO:SubProcess create_model() called ==================================
2024-02-12 20:12:48,286:INFO:Initializing create_model()
2024-02-12 20:12:48,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:12:48,286:INFO:Checking exceptions
2024-02-12 20:12:48,286:INFO:Importing libraries
2024-02-12 20:12:48,286:INFO:Copying training dataset
2024-02-12 20:12:48,314:INFO:Defining folds
2024-02-12 20:12:48,314:INFO:Declaring metric variables
2024-02-12 20:12:48,324:INFO:Importing untrained model
2024-02-12 20:12:48,334:INFO:K Neighbors Classifier Imported successfully
2024-02-12 20:12:48,347:INFO:Starting cross validation
2024-02-12 20:12:48,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:12:49,917:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,922:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,937:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,941:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,943:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,943:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,956:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,956:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,956:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,964:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:49,985:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,000:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,008:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,008:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,020:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,035:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,035:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,056:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,056:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,070:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,070:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,083:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:12:50,100:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,083:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,103:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,113:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,113:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,135:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,153:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,183:INFO:Calculating mean and std
2024-02-12 20:13:00,183:INFO:Creating metrics dataframe
2024-02-12 20:13:00,197:INFO:Uploading results into container
2024-02-12 20:13:00,204:INFO:Uploading model into container now
2024-02-12 20:13:00,206:INFO:_master_model_container: 2
2024-02-12 20:13:00,206:INFO:_display_container: 2
2024-02-12 20:13:00,206:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-12 20:13:00,206:INFO:create_model() successfully completed......................................
2024-02-12 20:13:00,518:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:00,518:INFO:Creating metrics dataframe
2024-02-12 20:13:00,538:INFO:Initializing Naive Bayes
2024-02-12 20:13:00,538:INFO:Total runtime is 0.6242141048113505 minutes
2024-02-12 20:13:00,557:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:00,557:INFO:Initializing create_model()
2024-02-12 20:13:00,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:00,557:INFO:Checking exceptions
2024-02-12 20:13:00,557:INFO:Importing libraries
2024-02-12 20:13:00,557:INFO:Copying training dataset
2024-02-12 20:13:00,592:INFO:Defining folds
2024-02-12 20:13:00,592:INFO:Declaring metric variables
2024-02-12 20:13:00,600:INFO:Importing untrained model
2024-02-12 20:13:00,610:INFO:Naive Bayes Imported successfully
2024-02-12 20:13:00,630:INFO:Starting cross validation
2024-02-12 20:13:00,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:13:00,970:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,980:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,980:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,990:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:00,990:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,001:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,003:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,014:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,014:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,031:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,032:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,035:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,053:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,056:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,060:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,063:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,071:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,082:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,086:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,103:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,118:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,124:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,149:INFO:Calculating mean and std
2024-02-12 20:13:01,149:INFO:Creating metrics dataframe
2024-02-12 20:13:01,154:INFO:Uploading results into container
2024-02-12 20:13:01,154:INFO:Uploading model into container now
2024-02-12 20:13:01,154:INFO:_master_model_container: 3
2024-02-12 20:13:01,154:INFO:_display_container: 2
2024-02-12 20:13:01,154:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-12 20:13:01,154:INFO:create_model() successfully completed......................................
2024-02-12 20:13:01,417:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:01,417:INFO:Creating metrics dataframe
2024-02-12 20:13:01,435:INFO:Initializing Decision Tree Classifier
2024-02-12 20:13:01,435:INFO:Total runtime is 0.6391651590665182 minutes
2024-02-12 20:13:01,447:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:01,447:INFO:Initializing create_model()
2024-02-12 20:13:01,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:01,447:INFO:Checking exceptions
2024-02-12 20:13:01,447:INFO:Importing libraries
2024-02-12 20:13:01,447:INFO:Copying training dataset
2024-02-12 20:13:01,481:INFO:Defining folds
2024-02-12 20:13:01,481:INFO:Declaring metric variables
2024-02-12 20:13:01,489:INFO:Importing untrained model
2024-02-12 20:13:01,489:INFO:Decision Tree Classifier Imported successfully
2024-02-12 20:13:01,508:INFO:Starting cross validation
2024-02-12 20:13:01,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:13:01,840:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,850:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,863:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,863:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,870:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,870:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,870:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,883:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,883:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,894:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,894:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,894:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,894:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,907:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,907:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,913:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,913:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,913:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,913:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,913:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,921:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,921:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,921:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,931:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,932:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,932:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,942:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,942:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:01,955:INFO:Calculating mean and std
2024-02-12 20:13:01,961:INFO:Creating metrics dataframe
2024-02-12 20:13:01,961:INFO:Uploading results into container
2024-02-12 20:13:01,961:INFO:Uploading model into container now
2024-02-12 20:13:01,961:INFO:_master_model_container: 4
2024-02-12 20:13:01,961:INFO:_display_container: 2
2024-02-12 20:13:01,961:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=555, splitter='best')
2024-02-12 20:13:01,961:INFO:create_model() successfully completed......................................
2024-02-12 20:13:02,251:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:02,251:INFO:Creating metrics dataframe
2024-02-12 20:13:02,275:INFO:Initializing SVM - Linear Kernel
2024-02-12 20:13:02,275:INFO:Total runtime is 0.6531657417615255 minutes
2024-02-12 20:13:02,285:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:02,285:INFO:Initializing create_model()
2024-02-12 20:13:02,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:02,285:INFO:Checking exceptions
2024-02-12 20:13:02,285:INFO:Importing libraries
2024-02-12 20:13:02,285:INFO:Copying training dataset
2024-02-12 20:13:02,311:INFO:Defining folds
2024-02-12 20:13:02,311:INFO:Declaring metric variables
2024-02-12 20:13:02,321:INFO:Importing untrained model
2024-02-12 20:13:02,329:INFO:SVM - Linear Kernel Imported successfully
2024-02-12 20:13:02,341:INFO:Starting cross validation
2024-02-12 20:13:02,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:13:02,925:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:02,935:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:02,935:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:02,945:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:02,945:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:02,955:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:02,965:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:02,984:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,115:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,122:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,125:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,135:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,176:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,177:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,187:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,196:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,204:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,206:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,206:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,206:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,226:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,226:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,237:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,237:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,237:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,237:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,247:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,247:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,257:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,257:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,257:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-12 20:13:03,268:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,287:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,306:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:03,332:INFO:Calculating mean and std
2024-02-12 20:13:03,332:INFO:Creating metrics dataframe
2024-02-12 20:13:03,349:INFO:Uploading results into container
2024-02-12 20:13:03,349:INFO:Uploading model into container now
2024-02-12 20:13:03,349:INFO:_master_model_container: 5
2024-02-12 20:13:03,353:INFO:_display_container: 2
2024-02-12 20:13:03,353:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=555, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-12 20:13:03,353:INFO:create_model() successfully completed......................................
2024-02-12 20:13:03,693:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:03,693:INFO:Creating metrics dataframe
2024-02-12 20:13:03,723:INFO:Initializing Ridge Classifier
2024-02-12 20:13:03,723:INFO:Total runtime is 0.6772958079973858 minutes
2024-02-12 20:13:03,736:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:03,736:INFO:Initializing create_model()
2024-02-12 20:13:03,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:03,736:INFO:Checking exceptions
2024-02-12 20:13:03,738:INFO:Importing libraries
2024-02-12 20:13:03,738:INFO:Copying training dataset
2024-02-12 20:13:03,770:INFO:Defining folds
2024-02-12 20:13:03,770:INFO:Declaring metric variables
2024-02-12 20:13:03,781:INFO:Importing untrained model
2024-02-12 20:13:03,791:INFO:Ridge Classifier Imported successfully
2024-02-12 20:13:03,808:INFO:Starting cross validation
2024-02-12 20:13:03,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:13:04,103:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,103:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,110:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,115:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,126:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,129:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,132:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,132:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,132:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,141:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,141:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,151:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,151:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,161:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,161:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,163:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,163:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,163:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,171:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,171:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,171:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,181:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,191:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,193:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,193:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,193:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,201:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,201:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,201:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,208:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,215:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,221:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,226:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-12 20:13:04,242:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,248:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,265:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,282:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:04,309:INFO:Calculating mean and std
2024-02-12 20:13:04,312:INFO:Creating metrics dataframe
2024-02-12 20:13:04,322:INFO:Uploading results into container
2024-02-12 20:13:04,322:INFO:Uploading model into container now
2024-02-12 20:13:04,322:INFO:_master_model_container: 6
2024-02-12 20:13:04,326:INFO:_display_container: 2
2024-02-12 20:13:04,327:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=555, solver='auto',
                tol=0.0001)
2024-02-12 20:13:04,327:INFO:create_model() successfully completed......................................
2024-02-12 20:13:04,683:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:04,683:INFO:Creating metrics dataframe
2024-02-12 20:13:04,715:INFO:Initializing Random Forest Classifier
2024-02-12 20:13:04,715:INFO:Total runtime is 0.6938332955042522 minutes
2024-02-12 20:13:04,734:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:04,734:INFO:Initializing create_model()
2024-02-12 20:13:04,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:04,734:INFO:Checking exceptions
2024-02-12 20:13:04,734:INFO:Importing libraries
2024-02-12 20:13:04,734:INFO:Copying training dataset
2024-02-12 20:13:04,776:INFO:Defining folds
2024-02-12 20:13:04,779:INFO:Declaring metric variables
2024-02-12 20:13:04,786:INFO:Importing untrained model
2024-02-12 20:13:04,800:INFO:Random Forest Classifier Imported successfully
2024-02-12 20:13:04,819:INFO:Starting cross validation
2024-02-12 20:13:04,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:13:07,880:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,905:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,914:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,916:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,930:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,936:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,936:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,948:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,948:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,948:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,956:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,964:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,966:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,966:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,976:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:07,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,016:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,029:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,048:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,114:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,130:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,153:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,162:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,166:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,228:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,272:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,304:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,331:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:08,376:INFO:Calculating mean and std
2024-02-12 20:13:08,380:INFO:Creating metrics dataframe
2024-02-12 20:13:08,395:INFO:Uploading results into container
2024-02-12 20:13:08,399:INFO:Uploading model into container now
2024-02-12 20:13:08,399:INFO:_master_model_container: 7
2024-02-12 20:13:08,399:INFO:_display_container: 2
2024-02-12 20:13:08,403:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=555, verbose=0, warm_start=False)
2024-02-12 20:13:08,403:INFO:create_model() successfully completed......................................
2024-02-12 20:13:08,780:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:08,780:INFO:Creating metrics dataframe
2024-02-12 20:13:08,831:INFO:Initializing Quadratic Discriminant Analysis
2024-02-12 20:13:08,831:INFO:Total runtime is 0.762419883410136 minutes
2024-02-12 20:13:08,839:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:08,839:INFO:Initializing create_model()
2024-02-12 20:13:08,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:08,839:INFO:Checking exceptions
2024-02-12 20:13:08,846:INFO:Importing libraries
2024-02-12 20:13:08,846:INFO:Copying training dataset
2024-02-12 20:13:08,890:INFO:Defining folds
2024-02-12 20:13:08,890:INFO:Declaring metric variables
2024-02-12 20:13:08,911:INFO:Importing untrained model
2024-02-12 20:13:08,924:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-12 20:13:08,954:INFO:Starting cross validation
2024-02-12 20:13:08,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:13:09,245:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,270:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,303:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,330:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,344:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,360:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,364:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,370:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,370:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-12 20:13:09,844:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,879:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,884:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,894:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,900:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,905:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,921:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,921:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,926:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,929:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,933:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:09,939:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,950:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,950:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,951:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,957:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,964:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,969:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,983:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:09,985:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,010:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,017:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,017:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,027:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,034:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,039:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,071:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:10,105:INFO:Calculating mean and std
2024-02-12 20:13:10,109:INFO:Creating metrics dataframe
2024-02-12 20:13:10,121:INFO:Uploading results into container
2024-02-12 20:13:10,121:INFO:Uploading model into container now
2024-02-12 20:13:10,121:INFO:_master_model_container: 8
2024-02-12 20:13:10,121:INFO:_display_container: 2
2024-02-12 20:13:10,121:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-12 20:13:10,121:INFO:create_model() successfully completed......................................
2024-02-12 20:13:10,508:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:10,508:INFO:Creating metrics dataframe
2024-02-12 20:13:10,551:INFO:Initializing Ada Boost Classifier
2024-02-12 20:13:10,551:INFO:Total runtime is 0.7910979668299358 minutes
2024-02-12 20:13:10,562:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:10,562:INFO:Initializing create_model()
2024-02-12 20:13:10,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:10,562:INFO:Checking exceptions
2024-02-12 20:13:10,569:INFO:Importing libraries
2024-02-12 20:13:10,569:INFO:Copying training dataset
2024-02-12 20:13:10,613:INFO:Defining folds
2024-02-12 20:13:10,613:INFO:Declaring metric variables
2024-02-12 20:13:10,628:INFO:Importing untrained model
2024-02-12 20:13:10,650:INFO:Ada Boost Classifier Imported successfully
2024-02-12 20:13:10,679:INFO:Starting cross validation
2024-02-12 20:13:10,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-12 20:13:13,757:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,788:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,809:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:13,819:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,819:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,839:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,849:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:13,859:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,950:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,970:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,970:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,981:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:13,990:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:13,990:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,000:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:14,010:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,063:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,082:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,092:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:14,102:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,121:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,142:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,158:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:14,166:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,235:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,255:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,263:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,270:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,274:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,274:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:14,276:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,281:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,285:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:14,286:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,293:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,293:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,302:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:14,307:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-12 20:13:14,312:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,316:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-12 20:13:14,341:INFO:Calculating mean and std
2024-02-12 20:13:14,350:INFO:Creating metrics dataframe
2024-02-12 20:13:14,360:INFO:Uploading results into container
2024-02-12 20:13:14,360:INFO:Uploading model into container now
2024-02-12 20:13:14,366:INFO:_master_model_container: 9
2024-02-12 20:13:14,366:INFO:_display_container: 2
2024-02-12 20:13:14,366:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=555)
2024-02-12 20:13:14,369:INFO:create_model() successfully completed......................................
2024-02-12 20:13:14,725:INFO:SubProcess create_model() end ==================================
2024-02-12 20:13:14,725:INFO:Creating metrics dataframe
2024-02-12 20:13:14,762:INFO:Initializing Gradient Boosting Classifier
2024-02-12 20:13:14,762:INFO:Total runtime is 0.8612804094950359 minutes
2024-02-12 20:13:14,782:INFO:SubProcess create_model() called ==================================
2024-02-12 20:13:14,782:INFO:Initializing create_model()
2024-02-12 20:13:14,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F00D190450>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F00D14C750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-12 20:13:14,782:INFO:Checking exceptions
2024-02-12 20:13:14,782:INFO:Importing libraries
2024-02-12 20:13:14,782:INFO:Copying training dataset
2024-02-12 20:13:14,836:INFO:Defining folds
2024-02-12 20:13:14,836:INFO:Declaring metric variables
2024-02-12 20:13:14,851:INFO:Importing untrained model
2024-02-12 20:13:14,866:INFO:Gradient Boosting Classifier Imported successfully
2024-02-12 20:13:14,897:INFO:Starting cross validation
2024-02-12 20:13:14,905:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:52:34,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 16:52:34,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 16:52:34,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 16:52:34,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-18 16:53:00,026:INFO:PyCaret ClassificationExperiment
2024-02-18 16:53:00,026:INFO:Logging name: clf-default-name
2024-02-18 16:53:00,026:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-18 16:53:00,026:INFO:version 3.2.0
2024-02-18 16:53:00,026:INFO:Initializing setup()
2024-02-18 16:53:00,026:INFO:self.USI: 0ef8
2024-02-18 16:53:00,026:INFO:self._variable_keys: {'data', 'memory', 'n_jobs_param', 'logging_param', 'idx', 'fold_shuffle_param', 'gpu_n_jobs_param', 'is_multiclass', '_available_plots', 'fix_imbalance', 'X_train', 'fold_generator', 'y', 'exp_name_log', 'html_param', 'gpu_param', 'X_test', 'y_test', 'pipeline', 'y_train', 'target_param', 'log_plots_param', 'X', 'exp_id', 'fold_groups_param', 'seed', 'USI', '_ml_usecase'}
2024-02-18 16:53:00,026:INFO:Checking environment
2024-02-18 16:53:00,026:INFO:python_version: 3.11.4
2024-02-18 16:53:00,026:INFO:python_build: ('main', 'Jul  5 2023 13:38:37')
2024-02-18 16:53:00,026:INFO:machine: AMD64
2024-02-18 16:53:00,026:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-18 16:53:00,026:INFO:Memory: svmem(total=17015914496, available=6226579456, percent=63.4, used=10789335040, free=6226579456)
2024-02-18 16:53:00,026:INFO:Physical Core: 6
2024-02-18 16:53:00,026:INFO:Logical Core: 12
2024-02-18 16:53:00,026:INFO:Checking libraries
2024-02-18 16:53:00,026:INFO:System:
2024-02-18 16:53:00,026:INFO:    python: 3.11.4 | packaged by Anaconda, Inc. | (main, Jul  5 2023, 13:38:37) [MSC v.1916 64 bit (AMD64)]
2024-02-18 16:53:00,026:INFO:executable: C:\Users\mahmo\anaconda3\python.exe
2024-02-18 16:53:00,026:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-18 16:53:00,026:INFO:PyCaret required dependencies:
2024-02-18 16:53:00,924:INFO:                 pip: 23.2.1
2024-02-18 16:53:00,924:INFO:          setuptools: 68.0.0
2024-02-18 16:53:00,924:INFO:             pycaret: 3.2.0
2024-02-18 16:53:00,924:INFO:             IPython: 8.12.0
2024-02-18 16:53:00,924:INFO:          ipywidgets: 8.0.4
2024-02-18 16:53:00,924:INFO:                tqdm: 4.65.0
2024-02-18 16:53:00,924:INFO:               numpy: 1.24.3
2024-02-18 16:53:00,924:INFO:              pandas: 1.5.3
2024-02-18 16:53:00,924:INFO:              jinja2: 3.1.2
2024-02-18 16:53:00,924:INFO:               scipy: 1.10.1
2024-02-18 16:53:00,924:INFO:              joblib: 1.2.0
2024-02-18 16:53:00,924:INFO:             sklearn: 1.2.2
2024-02-18 16:53:00,924:INFO:                pyod: 1.1.2
2024-02-18 16:53:00,924:INFO:            imblearn: 0.10.1
2024-02-18 16:53:00,924:INFO:   category_encoders: 2.6.3
2024-02-18 16:53:00,924:INFO:            lightgbm: 4.3.0
2024-02-18 16:53:00,924:INFO:               numba: 0.57.0
2024-02-18 16:53:00,924:INFO:            requests: 2.31.0
2024-02-18 16:53:00,924:INFO:          matplotlib: 3.7.1
2024-02-18 16:53:00,924:INFO:          scikitplot: 0.3.7
2024-02-18 16:53:00,924:INFO:         yellowbrick: 1.5
2024-02-18 16:53:00,924:INFO:              plotly: 5.9.0
2024-02-18 16:53:00,924:INFO:    plotly-resampler: Not installed
2024-02-18 16:53:00,924:INFO:             kaleido: 0.2.1
2024-02-18 16:53:00,924:INFO:           schemdraw: 0.15
2024-02-18 16:53:00,924:INFO:         statsmodels: 0.14.0
2024-02-18 16:53:00,924:INFO:              sktime: 0.21.1
2024-02-18 16:53:00,924:INFO:               tbats: 1.1.3
2024-02-18 16:53:00,924:INFO:            pmdarima: 2.0.4
2024-02-18 16:53:00,924:INFO:              psutil: 5.9.0
2024-02-18 16:53:00,924:INFO:          markupsafe: 2.1.1
2024-02-18 16:53:00,924:INFO:             pickle5: Not installed
2024-02-18 16:53:00,924:INFO:         cloudpickle: 2.2.1
2024-02-18 16:53:00,924:INFO:         deprecation: 2.1.0
2024-02-18 16:53:00,924:INFO:              xxhash: 3.4.1
2024-02-18 16:53:00,924:INFO:           wurlitzer: Not installed
2024-02-18 16:53:00,924:INFO:PyCaret optional dependencies:
2024-02-18 16:53:02,635:INFO:                shap: 0.44.1
2024-02-18 16:53:02,635:INFO:           interpret: 0.5.0
2024-02-18 16:53:02,635:INFO:                umap: 0.5.5
2024-02-18 16:53:02,635:INFO:     ydata_profiling: 4.6.0
2024-02-18 16:53:02,635:INFO:  explainerdashboard: 0.4.5
2024-02-18 16:53:02,635:INFO:             autoviz: Not installed
2024-02-18 16:53:02,635:INFO:           fairlearn: 0.7.0
2024-02-18 16:53:02,635:INFO:          deepchecks: Not installed
2024-02-18 16:53:02,635:INFO:             xgboost: Not installed
2024-02-18 16:53:02,635:INFO:            catboost: 1.2.2
2024-02-18 16:53:02,635:INFO:              kmodes: 0.12.2
2024-02-18 16:53:02,635:INFO:             mlxtend: 0.23.1
2024-02-18 16:53:02,635:INFO:       statsforecast: 1.5.0
2024-02-18 16:53:02,635:INFO:        tune_sklearn: Not installed
2024-02-18 16:53:02,635:INFO:                 ray: Not installed
2024-02-18 16:53:02,635:INFO:            hyperopt: 0.2.7
2024-02-18 16:53:02,635:INFO:              optuna: 3.5.0
2024-02-18 16:53:02,635:INFO:               skopt: 0.9.0
2024-02-18 16:53:02,635:INFO:              mlflow: 1.30.1
2024-02-18 16:53:02,635:INFO:              gradio: 3.50.2
2024-02-18 16:53:02,635:INFO:             fastapi: 0.109.1
2024-02-18 16:53:02,635:INFO:             uvicorn: 0.27.0.post1
2024-02-18 16:53:02,635:INFO:              m2cgen: 0.10.0
2024-02-18 16:53:02,635:INFO:           evidently: 0.2.8
2024-02-18 16:53:02,635:INFO:               fugue: 0.8.6
2024-02-18 16:53:02,635:INFO:           streamlit: Not installed
2024-02-18 16:53:02,635:INFO:             prophet: Not installed
2024-02-18 16:53:02,635:INFO:None
2024-02-18 16:53:02,635:INFO:Set up data.
2024-02-18 16:53:02,665:INFO:Set up folding strategy.
2024-02-18 16:53:02,665:INFO:Set up train/test split.
2024-02-18 16:53:02,685:INFO:Set up index.
2024-02-18 16:53:02,685:INFO:Assigning column types.
2024-02-18 16:53:02,695:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-18 16:53:02,736:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 16:53:02,736:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 16:53:02,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:02,767:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:02,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-18 16:53:02,999:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 16:53:03,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:03,020:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:03,020:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-18 16:53:03,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 16:53:03,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:03,090:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:03,131:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-18 16:53:03,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:03,162:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:03,162:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-18 16:53:03,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:03,231:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:03,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:03,302:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:03,302:INFO:Preparing preprocessing pipeline...
2024-02-18 16:53:03,312:INFO:Set up label encoding.
2024-02-18 16:53:03,312:INFO:Set up simple imputation.
2024-02-18 16:53:03,312:INFO:Set up column name cleaning.
2024-02-18 16:53:03,373:INFO:Finished creating preprocessing pipeline.
2024-02-18 16:53:03,373:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\mahmo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['itching', 'skin_rash',
                                             'nodal_skin_eruptions',
                                             'continuous_sneezing', 'shivering',
                                             'chills', 'joint_pain'...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-18 16:53:03,373:INFO:Creating final display dataframe.
2024-02-18 16:53:03,550:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 555  
1                                           prognosis  
2                                          Multiclass  
3   (vertigo) Paroymsal  Positional Vertigo: 0, AI...  
4                                         (4920, 133)  
5                                         (4920, 133)  
6                                         (3936, 133)  
7                                          (984, 133)  
8                                                 132  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               0ef8  
2024-02-18 16:53:03,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:03,626:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:03,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:03,697:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:03,697:INFO:setup() successfully completed in 3.67s...............
2024-02-18 16:53:05,176:INFO:gpu_param set to False
2024-02-18 16:53:05,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:05,244:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:05,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-18 16:53:05,310:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-18 16:53:07,817:INFO:Initializing compare_models()
2024-02-18 16:53:07,817:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-18 16:53:07,818:INFO:Checking exceptions
2024-02-18 16:53:07,825:INFO:Preparing display monitor
2024-02-18 16:53:07,851:INFO:Initializing Logistic Regression
2024-02-18 16:53:07,851:INFO:Total runtime is 0.0 minutes
2024-02-18 16:53:07,854:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:07,854:INFO:Initializing create_model()
2024-02-18 16:53:07,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:07,854:INFO:Checking exceptions
2024-02-18 16:53:07,854:INFO:Importing libraries
2024-02-18 16:53:07,854:INFO:Copying training dataset
2024-02-18 16:53:07,867:INFO:Defining folds
2024-02-18 16:53:07,868:INFO:Declaring metric variables
2024-02-18 16:53:07,871:INFO:Importing untrained model
2024-02-18 16:53:07,874:INFO:Logistic Regression Imported successfully
2024-02-18 16:53:07,880:INFO:Starting cross validation
2024-02-18 16:53:07,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:16,790:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,790:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,800:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,800:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,810:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,810:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,810:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,810:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,820:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,820:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,830:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,830:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,830:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,840:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,840:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,840:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,850:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,850:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,850:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,850:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,850:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,860:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,860:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,860:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,860:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,870:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,870:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,870:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,880:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,880:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:16,900:INFO:Calculating mean and std
2024-02-18 16:53:16,900:INFO:Creating metrics dataframe
2024-02-18 16:53:16,910:INFO:Uploading results into container
2024-02-18 16:53:16,910:INFO:Uploading model into container now
2024-02-18 16:53:16,930:INFO:_master_model_container: 1
2024-02-18 16:53:16,940:INFO:_display_container: 2
2024-02-18 16:53:16,940:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 16:53:16,940:INFO:create_model() successfully completed......................................
2024-02-18 16:53:17,117:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:17,117:INFO:Creating metrics dataframe
2024-02-18 16:53:17,117:INFO:Initializing K Neighbors Classifier
2024-02-18 16:53:17,117:INFO:Total runtime is 0.15443291664123535 minutes
2024-02-18 16:53:17,127:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:17,127:INFO:Initializing create_model()
2024-02-18 16:53:17,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:17,127:INFO:Checking exceptions
2024-02-18 16:53:17,127:INFO:Importing libraries
2024-02-18 16:53:17,127:INFO:Copying training dataset
2024-02-18 16:53:17,137:INFO:Defining folds
2024-02-18 16:53:17,137:INFO:Declaring metric variables
2024-02-18 16:53:17,137:INFO:Importing untrained model
2024-02-18 16:53:17,147:INFO:K Neighbors Classifier Imported successfully
2024-02-18 16:53:17,150:INFO:Starting cross validation
2024-02-18 16:53:17,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:17,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,703:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,734:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,734:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,734:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,734:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,734:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:17,734:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,099:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,099:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,099:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,109:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,119:INFO:Calculating mean and std
2024-02-18 16:53:21,119:INFO:Creating metrics dataframe
2024-02-18 16:53:21,119:INFO:Uploading results into container
2024-02-18 16:53:21,119:INFO:Uploading model into container now
2024-02-18 16:53:21,119:INFO:_master_model_container: 2
2024-02-18 16:53:21,119:INFO:_display_container: 2
2024-02-18 16:53:21,119:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-18 16:53:21,119:INFO:create_model() successfully completed......................................
2024-02-18 16:53:21,280:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:21,280:INFO:Creating metrics dataframe
2024-02-18 16:53:21,285:INFO:Initializing Naive Bayes
2024-02-18 16:53:21,285:INFO:Total runtime is 0.22388913631439208 minutes
2024-02-18 16:53:21,285:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:21,285:INFO:Initializing create_model()
2024-02-18 16:53:21,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:21,285:INFO:Checking exceptions
2024-02-18 16:53:21,285:INFO:Importing libraries
2024-02-18 16:53:21,285:INFO:Copying training dataset
2024-02-18 16:53:21,304:INFO:Defining folds
2024-02-18 16:53:21,304:INFO:Declaring metric variables
2024-02-18 16:53:21,304:INFO:Importing untrained model
2024-02-18 16:53:21,304:INFO:Naive Bayes Imported successfully
2024-02-18 16:53:21,319:INFO:Starting cross validation
2024-02-18 16:53:21,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:21,504:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,514:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,514:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,524:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,524:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,524:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,534:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,544:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,554:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,564:INFO:Calculating mean and std
2024-02-18 16:53:21,564:INFO:Creating metrics dataframe
2024-02-18 16:53:21,574:INFO:Uploading results into container
2024-02-18 16:53:21,574:INFO:Uploading model into container now
2024-02-18 16:53:21,574:INFO:_master_model_container: 3
2024-02-18 16:53:21,574:INFO:_display_container: 2
2024-02-18 16:53:21,574:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-18 16:53:21,574:INFO:create_model() successfully completed......................................
2024-02-18 16:53:21,715:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:21,715:INFO:Creating metrics dataframe
2024-02-18 16:53:21,725:INFO:Initializing Decision Tree Classifier
2024-02-18 16:53:21,725:INFO:Total runtime is 0.23122088511784872 minutes
2024-02-18 16:53:21,725:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:21,725:INFO:Initializing create_model()
2024-02-18 16:53:21,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:21,725:INFO:Checking exceptions
2024-02-18 16:53:21,725:INFO:Importing libraries
2024-02-18 16:53:21,725:INFO:Copying training dataset
2024-02-18 16:53:21,740:INFO:Defining folds
2024-02-18 16:53:21,740:INFO:Declaring metric variables
2024-02-18 16:53:21,740:INFO:Importing untrained model
2024-02-18 16:53:21,751:INFO:Decision Tree Classifier Imported successfully
2024-02-18 16:53:21,755:INFO:Starting cross validation
2024-02-18 16:53:21,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:21,948:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,948:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,948:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,958:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,968:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,974:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,978:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,988:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:21,998:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,008:INFO:Calculating mean and std
2024-02-18 16:53:22,008:INFO:Creating metrics dataframe
2024-02-18 16:53:22,008:INFO:Uploading results into container
2024-02-18 16:53:22,008:INFO:Uploading model into container now
2024-02-18 16:53:22,008:INFO:_master_model_container: 4
2024-02-18 16:53:22,008:INFO:_display_container: 2
2024-02-18 16:53:22,008:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=555, splitter='best')
2024-02-18 16:53:22,015:INFO:create_model() successfully completed......................................
2024-02-18 16:53:22,153:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:22,153:INFO:Creating metrics dataframe
2024-02-18 16:53:22,163:INFO:Initializing SVM - Linear Kernel
2024-02-18 16:53:22,163:INFO:Total runtime is 0.23853415648142498 minutes
2024-02-18 16:53:22,172:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:22,174:INFO:Initializing create_model()
2024-02-18 16:53:22,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:22,174:INFO:Checking exceptions
2024-02-18 16:53:22,174:INFO:Importing libraries
2024-02-18 16:53:22,174:INFO:Copying training dataset
2024-02-18 16:53:22,185:INFO:Defining folds
2024-02-18 16:53:22,185:INFO:Declaring metric variables
2024-02-18 16:53:22,188:INFO:Importing untrained model
2024-02-18 16:53:22,192:INFO:SVM - Linear Kernel Imported successfully
2024-02-18 16:53:22,192:INFO:Starting cross validation
2024-02-18 16:53:22,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:22,478:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,488:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,488:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,578:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,588:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,588:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,588:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,588:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,588:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,598:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,628:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,638:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,648:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,658:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,668:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-02-18 16:53:22,668:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,668:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,668:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,674:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,678:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,678:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:22,689:INFO:Calculating mean and std
2024-02-18 16:53:22,689:INFO:Creating metrics dataframe
2024-02-18 16:53:22,689:INFO:Uploading results into container
2024-02-18 16:53:22,689:INFO:Uploading model into container now
2024-02-18 16:53:22,689:INFO:_master_model_container: 5
2024-02-18 16:53:22,689:INFO:_display_container: 2
2024-02-18 16:53:22,689:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=555, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-18 16:53:22,689:INFO:create_model() successfully completed......................................
2024-02-18 16:53:22,837:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:22,837:INFO:Creating metrics dataframe
2024-02-18 16:53:22,847:INFO:Initializing Ridge Classifier
2024-02-18 16:53:22,847:INFO:Total runtime is 0.24992873271306357 minutes
2024-02-18 16:53:22,847:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:22,847:INFO:Initializing create_model()
2024-02-18 16:53:22,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:22,847:INFO:Checking exceptions
2024-02-18 16:53:22,857:INFO:Importing libraries
2024-02-18 16:53:22,857:INFO:Copying training dataset
2024-02-18 16:53:22,867:INFO:Defining folds
2024-02-18 16:53:22,868:INFO:Declaring metric variables
2024-02-18 16:53:22,872:INFO:Importing untrained model
2024-02-18 16:53:22,875:INFO:Ridge Classifier Imported successfully
2024-02-18 16:53:22,875:INFO:Starting cross validation
2024-02-18 16:53:22,883:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:23,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,042:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\anaconda3\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,052:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,062:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,075:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:23,082:INFO:Calculating mean and std
2024-02-18 16:53:23,082:INFO:Creating metrics dataframe
2024-02-18 16:53:23,082:INFO:Uploading results into container
2024-02-18 16:53:23,082:INFO:Uploading model into container now
2024-02-18 16:53:23,082:INFO:_master_model_container: 6
2024-02-18 16:53:23,082:INFO:_display_container: 2
2024-02-18 16:53:23,092:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=555, solver='auto',
                tol=0.0001)
2024-02-18 16:53:23,092:INFO:create_model() successfully completed......................................
2024-02-18 16:53:23,230:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:23,230:INFO:Creating metrics dataframe
2024-02-18 16:53:23,237:INFO:Initializing Random Forest Classifier
2024-02-18 16:53:23,237:INFO:Total runtime is 0.25643421014149986 minutes
2024-02-18 16:53:23,248:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:23,248:INFO:Initializing create_model()
2024-02-18 16:53:23,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:23,248:INFO:Checking exceptions
2024-02-18 16:53:23,248:INFO:Importing libraries
2024-02-18 16:53:23,248:INFO:Copying training dataset
2024-02-18 16:53:23,257:INFO:Defining folds
2024-02-18 16:53:23,257:INFO:Declaring metric variables
2024-02-18 16:53:23,257:INFO:Importing untrained model
2024-02-18 16:53:23,257:INFO:Random Forest Classifier Imported successfully
2024-02-18 16:53:23,272:INFO:Starting cross validation
2024-02-18 16:53:23,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:24,194:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,204:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,214:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,214:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,234:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,244:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,254:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,254:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,254:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,264:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,284:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,284:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,284:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,284:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,284:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,294:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,294:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,294:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,294:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,304:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,304:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,304:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,304:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,304:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,314:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,324:INFO:Calculating mean and std
2024-02-18 16:53:24,324:INFO:Creating metrics dataframe
2024-02-18 16:53:24,324:INFO:Uploading results into container
2024-02-18 16:53:24,324:INFO:Uploading model into container now
2024-02-18 16:53:24,324:INFO:_master_model_container: 7
2024-02-18 16:53:24,324:INFO:_display_container: 2
2024-02-18 16:53:24,324:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=555, verbose=0, warm_start=False)
2024-02-18 16:53:24,324:INFO:create_model() successfully completed......................................
2024-02-18 16:53:24,481:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:24,481:INFO:Creating metrics dataframe
2024-02-18 16:53:24,491:INFO:Initializing Quadratic Discriminant Analysis
2024-02-18 16:53:24,491:INFO:Total runtime is 0.2773240605990092 minutes
2024-02-18 16:53:24,491:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:24,491:INFO:Initializing create_model()
2024-02-18 16:53:24,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:24,491:INFO:Checking exceptions
2024-02-18 16:53:24,491:INFO:Importing libraries
2024-02-18 16:53:24,491:INFO:Copying training dataset
2024-02-18 16:53:24,507:INFO:Defining folds
2024-02-18 16:53:24,507:INFO:Declaring metric variables
2024-02-18 16:53:24,507:INFO:Importing untrained model
2024-02-18 16:53:24,516:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-18 16:53:24,523:INFO:Starting cross validation
2024-02-18 16:53:24,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:24,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,614:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,624:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,624:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,634:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-18 16:53:24,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,845:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,855:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,865:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,875:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,875:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,876:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:24,895:INFO:Calculating mean and std
2024-02-18 16:53:24,895:INFO:Creating metrics dataframe
2024-02-18 16:53:24,895:INFO:Uploading results into container
2024-02-18 16:53:24,895:INFO:Uploading model into container now
2024-02-18 16:53:24,895:INFO:_master_model_container: 8
2024-02-18 16:53:24,895:INFO:_display_container: 2
2024-02-18 16:53:24,895:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-18 16:53:24,895:INFO:create_model() successfully completed......................................
2024-02-18 16:53:25,048:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:25,048:INFO:Creating metrics dataframe
2024-02-18 16:53:25,058:INFO:Initializing Ada Boost Classifier
2024-02-18 16:53:25,058:INFO:Total runtime is 0.28676897684733077 minutes
2024-02-18 16:53:25,058:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:25,058:INFO:Initializing create_model()
2024-02-18 16:53:25,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:25,058:INFO:Checking exceptions
2024-02-18 16:53:25,058:INFO:Importing libraries
2024-02-18 16:53:25,058:INFO:Copying training dataset
2024-02-18 16:53:25,071:INFO:Defining folds
2024-02-18 16:53:25,071:INFO:Declaring metric variables
2024-02-18 16:53:25,075:INFO:Importing untrained model
2024-02-18 16:53:25,080:INFO:Ada Boost Classifier Imported successfully
2024-02-18 16:53:25,083:INFO:Starting cross validation
2024-02-18 16:53:25,083:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:53:26,439:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,439:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,439:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,439:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,449:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,449:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,449:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,449:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,449:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,459:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,459:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,459:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,469:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,469:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,469:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,476:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,479:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,490:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,500:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:53:26,500:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:53:26,510:INFO:Calculating mean and std
2024-02-18 16:53:26,510:INFO:Creating metrics dataframe
2024-02-18 16:53:26,510:INFO:Uploading results into container
2024-02-18 16:53:26,510:INFO:Uploading model into container now
2024-02-18 16:53:26,510:INFO:_master_model_container: 9
2024-02-18 16:53:26,510:INFO:_display_container: 2
2024-02-18 16:53:26,510:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=555)
2024-02-18 16:53:26,510:INFO:create_model() successfully completed......................................
2024-02-18 16:53:26,654:INFO:SubProcess create_model() end ==================================
2024-02-18 16:53:26,664:INFO:Creating metrics dataframe
2024-02-18 16:53:26,676:INFO:Initializing Gradient Boosting Classifier
2024-02-18 16:53:26,676:INFO:Total runtime is 0.3137365818023682 minutes
2024-02-18 16:53:26,684:INFO:SubProcess create_model() called ==================================
2024-02-18 16:53:26,684:INFO:Initializing create_model()
2024-02-18 16:53:26,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:53:26,685:INFO:Checking exceptions
2024-02-18 16:53:26,685:INFO:Importing libraries
2024-02-18 16:53:26,685:INFO:Copying training dataset
2024-02-18 16:53:26,701:INFO:Defining folds
2024-02-18 16:53:26,701:INFO:Declaring metric variables
2024-02-18 16:53:26,707:INFO:Importing untrained model
2024-02-18 16:53:26,708:INFO:Gradient Boosting Classifier Imported successfully
2024-02-18 16:53:26,719:INFO:Starting cross validation
2024-02-18 16:53:26,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:54:36,694:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:36,714:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:36,724:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,106:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,116:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,126:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,196:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,206:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,206:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,216:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,226:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,226:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,226:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,246:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,287:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,287:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,297:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,307:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,317:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,317:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,628:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,628:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,628:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:37,638:INFO:Calculating mean and std
2024-02-18 16:54:37,638:INFO:Creating metrics dataframe
2024-02-18 16:54:37,638:INFO:Uploading results into container
2024-02-18 16:54:37,638:INFO:Uploading model into container now
2024-02-18 16:54:37,648:INFO:_master_model_container: 10
2024-02-18 16:54:37,648:INFO:_display_container: 2
2024-02-18 16:54:37,648:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=555, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-18 16:54:37,648:INFO:create_model() successfully completed......................................
2024-02-18 16:54:37,798:INFO:SubProcess create_model() end ==================================
2024-02-18 16:54:37,798:INFO:Creating metrics dataframe
2024-02-18 16:54:37,808:INFO:Initializing Linear Discriminant Analysis
2024-02-18 16:54:37,808:INFO:Total runtime is 1.4992845098177594 minutes
2024-02-18 16:54:37,813:INFO:SubProcess create_model() called ==================================
2024-02-18 16:54:37,814:INFO:Initializing create_model()
2024-02-18 16:54:37,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:54:37,815:INFO:Checking exceptions
2024-02-18 16:54:37,815:INFO:Importing libraries
2024-02-18 16:54:37,815:INFO:Copying training dataset
2024-02-18 16:54:37,824:INFO:Defining folds
2024-02-18 16:54:37,824:INFO:Declaring metric variables
2024-02-18 16:54:37,827:INFO:Importing untrained model
2024-02-18 16:54:37,831:INFO:Linear Discriminant Analysis Imported successfully
2024-02-18 16:54:37,836:INFO:Starting cross validation
2024-02-18 16:54:37,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:54:38,220:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,230:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,233:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,236:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,246:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,252:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,252:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,253:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,253:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,253:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,263:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,263:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,268:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,268:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,270:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,270:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,270:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,270:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,270:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,280:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,283:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,284:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,286:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,286:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,286:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,286:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,286:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:38,302:INFO:Calculating mean and std
2024-02-18 16:54:38,302:INFO:Creating metrics dataframe
2024-02-18 16:54:38,302:INFO:Uploading results into container
2024-02-18 16:54:38,302:INFO:Uploading model into container now
2024-02-18 16:54:38,302:INFO:_master_model_container: 11
2024-02-18 16:54:38,302:INFO:_display_container: 2
2024-02-18 16:54:38,312:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-18 16:54:38,312:INFO:create_model() successfully completed......................................
2024-02-18 16:54:38,478:INFO:SubProcess create_model() end ==================================
2024-02-18 16:54:38,478:INFO:Creating metrics dataframe
2024-02-18 16:54:38,486:INFO:Initializing Extra Trees Classifier
2024-02-18 16:54:38,486:INFO:Total runtime is 1.5105707685152692 minutes
2024-02-18 16:54:38,486:INFO:SubProcess create_model() called ==================================
2024-02-18 16:54:38,486:INFO:Initializing create_model()
2024-02-18 16:54:38,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:54:38,486:INFO:Checking exceptions
2024-02-18 16:54:38,486:INFO:Importing libraries
2024-02-18 16:54:38,486:INFO:Copying training dataset
2024-02-18 16:54:38,505:INFO:Defining folds
2024-02-18 16:54:38,505:INFO:Declaring metric variables
2024-02-18 16:54:38,508:INFO:Importing untrained model
2024-02-18 16:54:38,513:INFO:Extra Trees Classifier Imported successfully
2024-02-18 16:54:38,519:INFO:Starting cross validation
2024-02-18 16:54:38,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:54:39,704:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,704:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,717:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,720:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,720:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,730:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,733:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,737:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,737:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,737:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,737:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,737:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,747:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,747:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,752:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,752:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,757:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,758:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,759:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,765:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,769:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,769:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,779:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,783:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,786:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,793:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,878:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,887:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,893:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:54:39,902:INFO:Calculating mean and std
2024-02-18 16:54:39,904:INFO:Creating metrics dataframe
2024-02-18 16:54:39,908:INFO:Uploading results into container
2024-02-18 16:54:39,908:INFO:Uploading model into container now
2024-02-18 16:54:39,909:INFO:_master_model_container: 12
2024-02-18 16:54:39,909:INFO:_display_container: 2
2024-02-18 16:54:39,910:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=555, verbose=0, warm_start=False)
2024-02-18 16:54:39,910:INFO:create_model() successfully completed......................................
2024-02-18 16:54:40,086:INFO:SubProcess create_model() end ==================================
2024-02-18 16:54:40,086:INFO:Creating metrics dataframe
2024-02-18 16:54:40,101:INFO:Initializing Light Gradient Boosting Machine
2024-02-18 16:54:40,101:INFO:Total runtime is 1.5374926924705508 minutes
2024-02-18 16:54:40,101:INFO:SubProcess create_model() called ==================================
2024-02-18 16:54:40,101:INFO:Initializing create_model()
2024-02-18 16:54:40,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:54:40,101:INFO:Checking exceptions
2024-02-18 16:54:40,101:INFO:Importing libraries
2024-02-18 16:54:40,101:INFO:Copying training dataset
2024-02-18 16:54:40,117:INFO:Defining folds
2024-02-18 16:54:40,117:INFO:Declaring metric variables
2024-02-18 16:54:40,120:INFO:Importing untrained model
2024-02-18 16:54:40,124:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-18 16:54:40,125:INFO:Starting cross validation
2024-02-18 16:54:40,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:55:10,689:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:10,698:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:10,720:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:10,760:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:10,771:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:10,783:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:11,242:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:11,252:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:11,267:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:11,696:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:11,707:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:11,721:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,030:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,074:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,086:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,198:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,208:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,225:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,559:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,585:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,594:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,715:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,735:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,755:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,965:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,977:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:12,983:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:14,134:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:14,150:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:14,160:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:55:14,167:INFO:Calculating mean and std
2024-02-18 16:55:14,167:INFO:Creating metrics dataframe
2024-02-18 16:55:14,177:INFO:Uploading results into container
2024-02-18 16:55:14,177:INFO:Uploading model into container now
2024-02-18 16:55:14,177:INFO:_master_model_container: 13
2024-02-18 16:55:14,177:INFO:_display_container: 2
2024-02-18 16:55:14,177:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=555, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-18 16:55:14,177:INFO:create_model() successfully completed......................................
2024-02-18 16:55:14,334:INFO:SubProcess create_model() end ==================================
2024-02-18 16:55:14,334:INFO:Creating metrics dataframe
2024-02-18 16:55:14,350:INFO:Initializing CatBoost Classifier
2024-02-18 16:55:14,350:INFO:Total runtime is 2.1083143949508667 minutes
2024-02-18 16:55:14,350:INFO:SubProcess create_model() called ==================================
2024-02-18 16:55:14,350:INFO:Initializing create_model()
2024-02-18 16:55:14,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:55:14,350:INFO:Checking exceptions
2024-02-18 16:55:14,350:INFO:Importing libraries
2024-02-18 16:55:14,350:INFO:Copying training dataset
2024-02-18 16:55:14,360:INFO:Defining folds
2024-02-18 16:55:14,360:INFO:Declaring metric variables
2024-02-18 16:55:14,370:INFO:Importing untrained model
2024-02-18 16:55:14,373:INFO:CatBoost Classifier Imported successfully
2024-02-18 16:55:14,377:INFO:Starting cross validation
2024-02-18 16:55:14,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:57:25,218:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:25,228:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:25,261:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:33,799:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:33,809:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:33,819:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:41,175:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:41,195:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:41,205:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:42,054:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:42,067:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:42,074:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:43,746:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:43,756:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:43,776:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:50,693:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:50,713:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:50,723:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:50,997:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,007:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,017:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,494:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,494:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,504:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,504:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,515:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,515:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,960:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,970:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,972:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:51,980:INFO:Calculating mean and std
2024-02-18 16:57:51,980:INFO:Creating metrics dataframe
2024-02-18 16:57:51,980:INFO:Uploading results into container
2024-02-18 16:57:51,980:INFO:Uploading model into container now
2024-02-18 16:57:51,980:INFO:_master_model_container: 14
2024-02-18 16:57:51,980:INFO:_display_container: 2
2024-02-18 16:57:51,980:INFO:<catboost.core.CatBoostClassifier object at 0x0000022D0C8FC350>
2024-02-18 16:57:51,980:INFO:create_model() successfully completed......................................
2024-02-18 16:57:52,131:INFO:SubProcess create_model() end ==================================
2024-02-18 16:57:52,131:INFO:Creating metrics dataframe
2024-02-18 16:57:52,151:INFO:Initializing Dummy Classifier
2024-02-18 16:57:52,151:INFO:Total runtime is 4.738320350646973 minutes
2024-02-18 16:57:52,154:INFO:SubProcess create_model() called ==================================
2024-02-18 16:57:52,154:INFO:Initializing create_model()
2024-02-18 16:57:52,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022D09D9FCD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:57:52,155:INFO:Checking exceptions
2024-02-18 16:57:52,155:INFO:Importing libraries
2024-02-18 16:57:52,155:INFO:Copying training dataset
2024-02-18 16:57:52,155:INFO:Defining folds
2024-02-18 16:57:52,165:INFO:Declaring metric variables
2024-02-18 16:57:52,167:INFO:Importing untrained model
2024-02-18 16:57:52,170:INFO:Dummy Classifier Imported successfully
2024-02-18 16:57:52,177:INFO:Starting cross validation
2024-02-18 16:57:52,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-18 16:57:52,316:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,316:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,326:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,326:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,326:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,326:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,335:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,345:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,355:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,365:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,372:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,372:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,372:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,376:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,376:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-18 16:57:52,387:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'hepatitis A') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-18 16:57:52,388:INFO:Calculating mean and std
2024-02-18 16:57:52,388:INFO:Creating metrics dataframe
2024-02-18 16:57:52,398:INFO:Uploading results into container
2024-02-18 16:57:52,398:INFO:Uploading model into container now
2024-02-18 16:57:52,398:INFO:_master_model_container: 15
2024-02-18 16:57:52,398:INFO:_display_container: 2
2024-02-18 16:57:52,398:INFO:DummyClassifier(constant=None, random_state=555, strategy='prior')
2024-02-18 16:57:52,398:INFO:create_model() successfully completed......................................
2024-02-18 16:57:52,559:INFO:SubProcess create_model() end ==================================
2024-02-18 16:57:52,559:INFO:Creating metrics dataframe
2024-02-18 16:57:52,576:INFO:Initializing create_model()
2024-02-18 16:57:52,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-18 16:57:52,576:INFO:Checking exceptions
2024-02-18 16:57:52,576:INFO:Importing libraries
2024-02-18 16:57:52,576:INFO:Copying training dataset
2024-02-18 16:57:52,589:INFO:Defining folds
2024-02-18 16:57:52,589:INFO:Declaring metric variables
2024-02-18 16:57:52,589:INFO:Importing untrained model
2024-02-18 16:57:52,589:INFO:Declaring custom model
2024-02-18 16:57:52,589:INFO:Logistic Regression Imported successfully
2024-02-18 16:57:52,589:INFO:Cross validation set to False
2024-02-18 16:57:52,589:INFO:Fitting Model
2024-02-18 16:57:52,983:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 16:57:52,983:INFO:create_model() successfully completed......................................
2024-02-18 16:57:53,203:INFO:_master_model_container: 15
2024-02-18 16:57:53,203:INFO:_display_container: 2
2024-02-18 16:57:53,203:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-18 16:57:53,203:INFO:compare_models() successfully completed......................................
2024-02-18 16:57:53,206:INFO:Initializing plot_model()
2024-02-18 16:57:53,206:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-18 16:57:53,206:INFO:Checking exceptions
2024-02-18 16:57:53,217:INFO:Preloading libraries
2024-02-18 16:57:53,217:INFO:Copying training dataset
2024-02-18 16:57:53,217:INFO:Plot type: boundary
2024-02-18 16:57:53,325:INFO:Fitting StandardScaler()
2024-02-18 16:57:53,345:INFO:Fitting PCA()
2024-02-18 16:57:53,488:INFO:Fitting Model
2024-02-18 16:57:54,591:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2024-02-18 16:57:55,815:INFO:Visual Rendered Successfully
2024-02-18 16:57:56,005:INFO:plot_model() successfully completed......................................
2024-02-18 16:57:56,012:INFO:Initializing plot_model()
2024-02-18 16:57:56,012:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-18 16:57:56,012:INFO:Checking exceptions
2024-02-18 16:57:56,017:INFO:Preloading libraries
2024-02-18 16:57:56,018:INFO:Copying training dataset
2024-02-18 16:57:56,019:INFO:Plot type: auc
2024-02-18 16:57:56,176:INFO:Fitting Model
2024-02-18 16:57:56,182:WARNING:C:\Users\mahmo\anaconda3\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2024-02-18 16:57:56,182:INFO:Scoring test/hold-out set
2024-02-18 16:57:56,731:INFO:Visual Rendered Successfully
2024-02-18 16:57:56,882:INFO:plot_model() successfully completed......................................
2024-02-18 16:57:56,886:INFO:Initializing plot_model()
2024-02-18 16:57:56,886:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D098C5A50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=555, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-18 16:57:56,886:INFO:Checking exceptions
2024-02-18 16:57:56,894:INFO:Preloading libraries
2024-02-18 16:57:56,895:INFO:Copying training dataset
2024-02-18 16:57:56,895:INFO:Plot type: feature
2024-02-18 16:57:57,169:INFO:Visual Rendered Successfully
2024-02-18 16:57:57,309:INFO:plot_model() successfully completed......................................
